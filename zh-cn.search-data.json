{"/about/":{"data":{"":"","qiandu付款方式#QianDu付款方式":"QianDu仅支持使用BTC、USDT 来支付QianDu所提供的服务，并我们一段时间后会更换收款地址，请以此处公示的钱包地址为准：\nBTC: bc1plklsdytnfk2elhd00gg5r08e3cdye6j96cr4etpnd0crgpnuzr6s69hgqj\nUSDT(ERC20): 0xE40E0dc445BA8D6C7db0318cC48D34556457FE13\nUSDT(TRC20): TUXiSG7EVk1rrc9pQzCLe6W1P3btvnB7Dm","qiandu是什么#QianDu是什么":"Qiandu是一个100%保护用户隐私的社区，用户和开发者可以在平台交易或推荐任何数字商品、技术服务、API等不限制行业的业务。\n社区承诺任何能进入社区的开发者都是缴纳过保证金或是有丰富经验的行业从业人员。","qiandu的价值观#QianDu的价值观":" 可靠性：凭借在行业多年经验，我们了解我们工作的关键性质。我们的远程团队成员大多拥有来自硅谷、印度新德里、北京中关村的顶尖人才。 透明度：我们相信开放的沟通。QianDu使我们能够诚实地对待我们的能力和局限性，我们始终致力于超越您的期望。 问责制：主要由QianDu管理意味着我们对团队成员的服务的方方面面负责。我们支持我们的工作，对我们的成功和错误负责。 创新：我们一直在寻找改进和创新的方法。我们敏捷的结构使我们能够快速实施新想法并响应用户需求。 个人风格：我们相信人际关系的力量。当您与 QianDu 合作时，您不仅仅是客户 - 您直接与产品背后的人互动。 感谢您选择 QianDu 并支持独立的开发社区。\n十六年来，我们一直在成长和发展，我们期待与您继续这段旅程，不断改进我们的服务，成为您在互联网领域值得信赖的合作伙伴。","qiandu的承诺#QianDu的承诺":"我们与我们的用户紧密相连。\n您发送的每封电子邮件、问题或反馈都会由真人阅读和回复 — 不是机器人，不是外包支持团队，而是 QianDU 核心的个人。\n我们致力于提供一款能够解决您的问题并提供无缝、值得信赖体验的服务。","qiandu的故事#QianDu的故事":"Qiandu的前身是知名的华人论坛，因为一些特殊原因创始人X离世后，作为他的追随者Jack Tang 与Mark Chen 、 Andy Musk 出资并创办了QianDu。\n创办QianDu是互联网中一家非常注重隐私的开发社区，由全世界多位小伙伴的支持和专业知识下经营。\n多年来，我们一直致力于用最隐私的方式提供可靠、值得信赖的解决方案，以为用户真正发挥作用未己任。\n作为一家自力更生的远程团队，我们不受任何政策或投资者要求的约束。这种自由使我们能够灵活应对变化，并专注于真正最重要的事情：我们的用户。\n创始团队于 2008 年开始从事隐私服务行业，没有风险投资或外部资金。我们开发的每个服务项目、做出的每个决定都经过深思熟虑，以用户为中心。这些年的旅程并不总是一帆风顺，但却收获颇丰。\n我们根据最适合您需求的因素做出决策，而不是根据最适合董事会的因素做出决策。\nAndy Musk：我希望我们的用户都能拥有真正意义上的自由，而我们要做的就是帮助他们（A在全员会议上说的这句话真实的代表了我们所有人的想法）","使用qiandu的方法#使用QianDu的方法":"无实体并不意味着受到限制。\n事实上，这是我们的超能力。我们规模小巧 — 安全且支持提供1V1/0V1服务 — 让我们能够行动更快、反应更灵敏，并且我们拥有来自全世界的小伙伴远程办公可以为您提供一切您所需要的服务。\n当您使用 QianDu 时，您不仅仅是在使用一个平台；您是在与我们热情和愿景互动，打造一个强大、可靠且极度安全的服务平台。"},"title":"关于千度"},"/about/contact/":{"data":{"":"Hi~很高兴能在QianDu遇到你，期待您更快的加入QianDu！\n联系我们 ","加入qiandu可以做什么#加入QianDu可以做什么？":"您可以为QianDu的访问者提供服务：\n网络与应用程序 网络安全顾问 代付服务 担保交易 商业营销顾问 Web3区块链服务 软件交易 您也可以参与到QianDu的内容维护中来\n博客 跨境贸易工具导航 区块链工具导航 AI工具导航 工具导航 ","我可以加入qiandu吗#我可以加入QianDu吗？":"当然，我们欢迎全世界注重隐私的开发者/博主加入我们，加入QianDu大家庭后您无论是人脉或者是收入肯定可以收获更多。"},"title":"加入社区"},"/about/docs/":{"data":{"":"探索以下各节以学习如何参与到Qiandu社区的维护：\n目录结构 配置 Markdown 代码高亮 LaTeX 公式 图表 短代码 "},"title":"社区维护指南"},"/about/docs/configuration/":{"data":{"":"Qiandu 从 Hugo 网站根目录下的 hugo.yaml 读取配置。 在配置文件中，您可以配置站点的所有选项。 你可以在 exampleSite/hugo.yaml 中找到此站点的配置文件作为开始。","footer#Footer":"版权声明 如需修改网站页脚中显示的版权文本，您需要创建一个名为“i18n/en.yaml”的文件。 在此文件中，填写新的版权文本，像这样：\ni18n/en.yamlcopyright: \"© 2024 Qiandu.org\" 你可以在 GitHub 存储库中找到示例 i18n/en.yaml 文件。另外，你可以在版权文本中使用 Markdown 格式。","侧边栏#侧边栏":"主侧边栏 主侧边栏是自动从 content 目录结构生成的。 有关更多详细信息，转至 目录结构。\n额外链接 侧边栏的额外链接在配置文件的 menu.sidebar 部分中配置：\nhugo.yamlmenu: sidebar: - name: More params: type: separator weight: 1 - name: \"About\" pageRef: \"/about\" weight: 2 - name: \"Docs ↗\" url: \"https://gohugo.io/name/\" weight: 3 ","其他#其他":"Favicon 如需自定义 favicon，请将图标文件放在 static 文件夹下以覆盖 主题中的默认 favicon：\nstatic android-chrome-192x192.png android-chrome-512x512.png apple-touch-icon.png favicon-16x16.png favicon-32x32.png favicon-dark.svg favicon.ico favicon.svg site.webmanifest 在您的项目中包含 favicon.ico 和 favicon.svg 文件，以确保网站的网站图标正确显示。\n虽然 favicon.ico 通常适用于较旧的浏览器，但 favicon.svg 受到现代浏览器的支持，所以更现代的做法是添加 favicon-dark.svg 以便在黑暗模式下提供较好的体验体验。\n请随意使用 favicon.io 或 favycon 等工具来生成这些图标。\n颜色主题配置 使用theme设置来配置默认主题模式和切换按钮，允许访问者在浅色或深色模式之间切换。\nhugo.yamlparams: theme: # light | dark | system default: system displayToggle: true theme.default 的可选项：\nlight - 仅使用浅色模式 dark - 仅使用神色模式 system - 跟随系统 theme.displayToggle 控制显示用于更改主题的切换按钮。 当设置为“true”时，访问者可以在浅色或深色模式之间切换，覆盖默认设置。\n页宽 页面的宽度可以通过配置文件中的params.page.width参数来调整：\nhugo.yamlparams: page: # full (100%), wide (90rem), normal (1280px) width: wide 有三个可选项：full, wide, and normal. 默认的页宽模式是 normal.\n同样的，导航栏和 footer 的宽度也可通过 params.navbar.width 和 params.footer.width 调整。\n搜索 默认情况下启用由 FlexSearch 提供全文搜索。 要自定义搜索索引，请在配置文件中设置 params.search.flexsearch.index ：\nhugo.yamlparams: # Search search: enable: true type: flexsearch flexsearch: # index page by: content | summary | heading | title index: content flexsearch.index 的可选项：\ncontent - 全内容搜索 summary - 概述 Hugo Content Summaries heading - 一级和二级标题 title - 仅搜索标题 要自定义检索分词，请在配置文件中设置params.search.flexsearch.tokenize：\nparams: # ... flexsearch: # full | forward | reverse | strict tokenize: forward flexsearch.tokenize的可选项:\nstrict - 严格单词匹配 forward - 单词前缀匹配 reverse - 单词前后缀匹配 full - 单词子串匹配。 在默认的分词逻辑下，中文一句话就是一个“单词”\n要从搜索索引中排除页面，更改 front matter 中的 excludeSearch: true:\ncontent/docs/guide/configuration.md--- title: Configuration excludeSearch: true --- Google Analytics 要启用 Google Analytics，设置 services.googleAnalytics.ID:\nhugo.yamlservices: googleAnalytics: ID: G-MEASUREMENT_ID ","右侧边栏#右侧边栏":"目录 目录是根据内容文件中的标题自动生成的，可以在 front matter 设置 toc：false 来禁用它。\ncontent/docs/guide/configuration.md--- title: Configuration toc: false --- 编辑此页链接 要配置编辑此页链接，我们可以在配置文件中设置 params.editURL.base：\nhugo.yamlparams: editURL: base: \"https://github.com/your-username/your-repo/edit/main\" 将为每个页面自动生成编辑链接。 如需为特定页面设置编辑链接，可以在页面的 front matter 中设置 editURL：\ncontent/docs/guide/configuration.md--- title: Configuration editURL: \"https://example.com/edit/this/page\" --- ","导航栏#导航栏":"菜单 右上角的菜单在配置文件的 menu.main 中配置：\nhugo.yamlmenu: main: - name: Documentation pageRef: /docs weight: 1 - name: Blog pageRef: /blog weight: 2 - name: About pageRef: /about weight: 3 - name: Search weight: 4 params: type: search - name: GitHub weight: 5 url: \"\" params: icon: github 有几种不同类型的菜单项：\nLink to a page in the site with pageRef - name: Documentation pageRef: /docs Link to an external URL with url - name: GitHub url: \"https://github.com\" Search bar with type: search - name: Search params: type: search Icon - name: GitHub params: icon: github 这些菜单项可以通过设置 weight 进行排序。"},"title":"配置文件"},"/about/docs/deploy-site/":{"data":{"":"Qiandu由本地生成静态站点，已经部署多种托管方式同步并支持用户访问，您可以申请同步权限，加入我们的Github之后，您的修改将在一瞬间同步至全世界。","cloudflare#Cloudflare":"Cloudflare主节点 dev.qiandu.org\nCloudflare备用节点： qiandu.pages.dev","github-pages#GitHub Pages":"GitHub主节点 qiandu.org\nGitHub备用节点： qianduorg.github.io","netlify#Netlify":"暂停开放入口","vercel#Vercel":"暂停开放入口"},"title":"访问qiandu.org"},"/about/docs/diagrams/":{"data":{"":"目前，Qiandu 支持 Mermaid 的图表。","mermaid#Mermaid":"Mermaid 是一个基于 JavaScript 的图表绘制工具，它的文本定义和 Markdown 类似，可在浏览器中动态创建图表。例如：流程图、序列图、饼图等。\n在 Hextra 中使用 Mermaid 就像使用代码块一样简单：\n```mermaid graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ``` 将呈现为：\ngraph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD;Sequence diagram：\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good!如需获取更多信息，转至 Mermaid Documentation。"},"title":"图表"},"/about/docs/latex/":{"data":{"":"$\\KaTeX$ 用于呈现 LaTeX 数学表达式。可在 frontmatter 将 math 设置为 true 来启用。\nMarkdown--- title: \"My Page with LaTeX\" math: true --- 启用后，KaTeX 中的脚本，样式表和字体将自动包含在你的网站中。这样就可以在 Markdown 内容中使用 LaTeX 数学表达式。","化学表达式#化学表达式":"通过 mhchem 支持化学表达式。\n行内：$\\ce{H2O}$ 是水。\n独立段落：\npage.md$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$ $$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$","支持的功能#支持的功能":"有关支持的符号列表，转至 KaTeX 支持的公式。","示例#示例":"Markdown 内容支持行内和独立段落的 LaTeX 数学表达式。\n行内 page.mdThis $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ is inline. This $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ is inline.\n独立段落 page.md$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} \\, dt$$ 将被渲染为：\n$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} , dt$$"},"title":"LaTeX 公式"},"/about/docs/markdown/":{"data":{"":"Qiandu 支持 Markdown 来书写内容，创建列表等。本页将向你展示一些Qiandu所使用的最常见 Markdown 语法示例。","markdown-基础#Markdown 基础":"文本样式 Style Syntax Example Output Bold **bold text** **bold text** bold text Italic *italicized text* `italicized text italicized text Strikethrough ~~strikethrough text~~ ~~strikethrough text~~ strikethrough text Subscript \u003csub\u003e\u003c/sub\u003e This is a \u003csub\u003esubscript\u003c/sub\u003e text This is a subscript text Superscript \u003csup\u003e\u003c/sup\u003e This is a \u003csup\u003esuperscript\u003c/sup\u003e text This is a superscript text 引用 带角标的块引用：\nDon’t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nMarkdown\u003e Don't communicate by sharing memory, share memory by communicating.\u003cbr\u003e \u003e — \u003ccite\u003eRob Pike[^1]\u003c/cite\u003e [^1]: The above quote is excerpted from Rob Pike's [talk](https://www.youtube.com/watch?v=PAAkCSZUG1c) during Gopherfest, November 18, 2015. 表格 表格并非核心 Markdown 规范，但 Hugo 支持开箱即用的表格：\nName Age Bob 27 Alice 23 Markdown| Name | Age | |--------|------| | Bob | 27 | | Alice | 23 | Markdown 表格中的内联 Italics Bold Code italics bold code Markdown| Italics | Bold | Code | | -------- | -------- | ------ | | *italics* | **bold** | `code` | 代码块 Syntax Highlighting 列表 有序列表 First item Second item Third item Markdown1. First item 2. Second item 3. Third item 无序列表 List item Another item And another item Markdown* List item * Another item * And another item 嵌套列表 Fruit Apple Orange Banana Dairy Milk Cheese Markdown* Fruit * Apple * Orange * Banana * Dairy * Milk * Cheese 图片 Markdown![landscape](https://picsum.photos/800/600) 带有标题：\nUnsplash Landscape Markdown![landscape](https://picsum.photos/800/600 \"Unsplash Landscape\") The above quote is excerpted from Rob Pike’s talk during Gopherfest, November 18, 2015. ↩︎","md参考资料#MD参考资料":" Markdown Guide Markdown Cheatsheet Markdown Tutorial Markdown Reference ","配置#配置":"Qiandu使用 Goldmark 解析 Markdown。 Markdown 渲染可以联系社区管理员在 hugo.yaml 中的 markup.goldmark 中配置。以下是Qiandu的默认配置：\nhugo.yamlmarkup: goldmark: renderer: unsafe: true highlight: noClasses: false 如需了解更多选项，转至 Configure Markup。"},"title":"Markdown语法"},"/about/docs/multi-language/":{"data":{"":"Qiandu 支持使用 Hugo 的多语言模式 创建多语言的网站。","启用多语言支持#启用多语言支持":"为了使Qiandu支持您的语言，您需要告诉 Hugo 需要支持的语言。 在Qiandu的站点配置文件中添加：\nhugo.yamldefaultContentLanguage: en languages: en: languageName: English weight: 1 fr: languageName: Français weight: 2 ja: languageName: 日本語 weight: 3 ","按文件名管理翻译#按文件名管理翻译":"Hugo 支持按文件名管理翻译。例如，如果我们有一个英文文件 content/docs/_index.md，我们可以创建一个翻译为法语的文件 content/docs/_index.fr.md。\ncontent docs _index.md _index.fr.md _index.ja.md 注意：Hugo 还支持按内容目录管理翻译。","更多参考#更多参考":" Hugo Multilingual Mode Hugo Multilingual Part 1: Content translation Hugo Multilingual Part 2: Strings localization ","翻译字符串#翻译字符串":"要翻译其他地方的字符串，我们需要将翻译添加到相应的 i18n 文件中：\ni18n/fr.yamlreadMore: Lire la suite ","翻译菜单项#翻译菜单项":"要翻译导航栏中的菜单项，我们需要设置 identifier 字段：\nhugo.yamlmenu: main: - identifier: documentation name: Documentation pageRef: /docs weight: 1 - identifier: blog name: Blog pageRef: /blog weight: 2 "},"title":"多语言"},"/about/docs/organize-files/":{"data":{"":"","侧边栏导航#侧边栏导航":"侧边栏导航是根据内容组织的字母顺序自动生成的。要手动配置侧边栏顺序，可以在 Markdown 文件的 frontmatter 中使用 weight 配置。\ncontent/docs/guide/_index.md--- title: Guide weight: 2 --- ℹ️ 建议侧边栏不要太深。如果内容太多，请考虑 将它们分成多个部分。 ","目录简介#目录简介":"默认情况下，Qiandu是基于Hugo维护的，所以内容在 content 目录中搜索 Markdown 文件，目录的结构决定了网站的最终输出结构。 如示例：\ncontent _index.md docs _index.md getting-started.md guide _index.md organize-files.md blog _index.md post-1.md 每个 _index.md 文件都是相应部分的索引页，其他 Markdown 文件则是常规页面。\ncontent ├── _index.md // \u003c- / ├── docs │ ├── _index.md // \u003c- /docs/ │ ├── getting-started.md // \u003c- /docs/getting-started/ │ └── guide │ ├── _index.md // \u003c- /docs/guide/ │ └── organize-files.md // \u003c- /docs/guide/organize-files/ └── blog ├── _index.md // \u003c- /blog/ └── post-1.md // \u003c- /blog/post-1/ ","配置内容目录#配置内容目录":"如果需要为的内容使用不同的目录，可以联系管理员在站点配置文件中设置 contentDir 来实现。"},"title":"目录结构"},"/about/docs/shortcodes/":{"data":{"":"Hugo 短代码 是你的内容文件中调用内置或自定义模板的简单片段。\nHextra 提供了一系列美观的短代码以增强你的内容。\n注意事项 卡片 文件树 图标 步骤 标签 "},"title":"短代码"},"/about/docs/shortcodes/callout/":{"data":{"":"向读者显示重要信息的内置组件。","example#Example":" 👾 标注是一段旨在吸引注意力的短文本 ℹ️ 标注是一段旨在吸引注意力的短文本。 ⚠️ 标注是一段旨在吸引注意力的短文本。 🚫 标注是一段旨在吸引注意力的短文本。 ","usage#Usage":"Default 🌐 Hugo 可用于创建各种网站，包括博客、作品集、文档网站等 {{\u003c callout emoji=\"🌐\" \u003e}} Hugo 可用于创建各种网站，包括博客、作品集、文档网站等 {{\u003c /callout \u003e}} Info ℹ️ 请访问 GitHub 查看最新版本 {{\u003c callout type=\"info\" \u003e}} 请访问 GitHub 查看最新版本 {{\u003c /callout \u003e}} Warning ⚠️ 该 API 将在下一版本中弃用 {{\u003c callout type=\"warning\" \u003e}} **标注**是一段旨在吸引注意力的简短文字 {{\u003c /callout \u003e}} Error 🚫 出问题了，要爆炸了 {{\u003c callout type=\"error\" \u003e}} 出问题了，要爆炸了 {{\u003c /callout \u003e}} "},"title":"标注"},"/about/docs/shortcodes/cards/":{"data":{"":"","image-card#Image Card":"此外，该卡还支持通过以下参数添加图像和处理：\nParameter Description image 指定卡片的图像 URL. method 设置 Hugo 的图像处理方法。 options 配置 Hugo 的图像处理选项。 卡片支持三种图像：\n远程图片：完整网址应放置在 image 参数中 静态图片：使用 Hugo 的 static/ 目录中的相对路径 处理过的图片：使用 Hugo 的 assets/ 目录中的相对路径 Hextra 在构建过程中会自动检测图片是否需要处理，并根据需要应用 options 参数或默认设置（缩放，800x，质量 80，WebP 格式）。\n它目前支持以下处理方法：Resize（缩放）、Fit（适应）、Fill（填充）和 Crop（裁剪）。\n有关 Hugo 内置图像处理命令、方法和选项的更多信息，请参阅他们的 Image Processing Documentation.","使用#使用":" {{\u003c/* cards */\u003e}} {{\u003c/* card link=\"../callout\" title=\"Callout\" icon=\"warning\" */\u003e}} {{\u003c/* card link=\"/\" title=\"No Icon\" */\u003e}} {{\u003c/* /cards */\u003e}} {{\u003c/* cards */\u003e}} {{\u003c/* card link=\"/\" title=\"Image Card\" image=\"https://source.unsplash.com/featured/800x600?landscape\" subtitle=\"Unsplash Landscape\" */\u003e}} {{\u003c/* card link=\"/\" title=\"Local Image\" image=\"/images/card-image-unprocessed.jpg\" subtitle=\"Raw image under static directory.\" */\u003e}} {{\u003c/* card link=\"/\" title=\"Local Image\" image=\"images/space.jpg\" subtitle=\"Image under assets directory, processed by Hugo.\" method=\"Resize\" options=\"600x q80 webp\" */\u003e}} {{\u003c/* /cards */\u003e}} ","卡片参数#卡片参数":" Parameter Description link URL（内部或外部） title 卡片的标题 subtitle 字幕标题（支持 Markdown） icon 图标的名称 ","示例#示例":" Callout Image CardQiandu Cards Local ImageQiandu Cards Local ImageQiandu Cards "},"title":"Cards"},"/about/docs/shortcodes/details/":{"data":{"":"用于显示可折叠内容的内置组件。","usage#Usage":" {{%/* details title=\"Details\" */%}} 这是细节的内容 **支持** Markdown {{%/* /details */%}} {{%/* details title=\"Click me to reveal\" closed=\"true\" */%}} 默认情况下这将被隐藏 {{%/* /details */%}} ","示例#示例":" Details 这是细节的内容\nMarkdown is supported.\nClick me to reveal 默认情况下这将被隐藏 "},"title":"详情"},"/about/docs/shortcodes/filetree/":{"data":{"":"","用法#用法":" Markdown{{\u003c/* filetree/container */\u003e}} {{\u003c/* filetree/folder name=\"content\" */\u003e}} {{\u003c/* filetree/file name=\"_index.md\" */\u003e}} {{\u003c/* filetree/folder name=\"docs\" state=\"closed\" */\u003e}} {{\u003c/* filetree/file name=\"_index.md\" */\u003e}} {{\u003c/* filetree/file name=\"introduction.md\" */\u003e}} {{\u003c/* filetree/file name=\"introduction.fr.md\" */\u003e}} {{\u003c/* /filetree/folder */\u003e}} {{\u003c/* /filetree/folder */\u003e}} {{\u003c/* filetree/file name=\"hugo.toml\" */\u003e}} {{\u003c/* /filetree/container */\u003e}} ","示例#示例":" content _index.md docs _index.md introduction.md introduction.fr.md hugo.toml "},"title":"文件树"},"/about/docs/shortcodes/icon/":{"data":{"":"要内联使用此短代码，需要在配置中启用内联短代码：\nhugo.yamlenableInlineShortcodes: true 可用图标列表可以在以下位置找到 data/icons.yaml","用法#用法":" {{\u003c/* icon \"github\" */\u003e}} Heroicons v1 轮廓图标开箱即用\n如何添加自己的图标 创建 data/icons.yaml 文件，然后按以下格式添加您自己的 SVG 图标：\ndata/icons.yamlyour-icon: \u003csvg\u003eyour icon svg content\u003c/svg\u003e 然后可以在短代码中使用它，如下所示：\n{{\u003c/* icon \"your-icon\" */\u003e}} {{\u003c/* card icon=\"your-icon\" */\u003e}} 提示：Iconify Design 是为您的网站查找 SVG 图标的好地方","示例#示例":" "},"title":"图标"},"/about/docs/shortcodes/steps/":{"data":{"":"A built-in component to display a series of steps.","使用#使用":"将 Markdown h3 标题放入 steps 短代码中。\n{{%/* steps */%}} ### Step 1 This is the first step. ### Step 2 This is the second step. {{%/* /steps */%}} ","示例#示例":" 第一步 这是第一步。\n第二步 这是第二步。\n第三步 这是第三步。"},"title":"步骤"},"/about/docs/shortcodes/tabs/":{"data":{"":"","使用#使用":"默认情况下 {{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}} {{\u003c tab \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} 指定索引 使用 defaultIndex 属性指定选定的选项卡。索引从 0 开始。\n{{\u003c tabs items=\"JSON,YAML,TOML\" defaultIndex=\"1\" \u003e}} {{\u003c tab \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}} {{\u003c tab \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} 默认为 YAML\nJSONYAMLTOML JSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax. YAML: YAML is a human-readable data serialization language. TOML: TOML aims to be a minimal configuration file format that’s easy to read due to obvious semantics. 使用 Markdown 还支持包括代码块的 Markdown 语法：\n{{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}} {{\u003c tab \u003e}} ```json { \"hello\": \"world\" } ``` {{\u003c /tab \u003e}} ... add other tabs similarly {{\u003c /tabs \u003e}} JSONYAMLTOML { \"hello\": \"world\" } hello: world hello = \"world\" ","示例#示例":" JSONYAMLTOML JSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax. YAML: YAML is a human-readable data serialization language. TOML: TOML aims to be a minimal configuration file format that’s easy to read due to obvious semantics. "},"title":"标签页"},"/about/docs/syntax-highlighting/":{"data":{"":"Qiandu 使用 Chroma，一种纯 Golang 实现的代码高亮渲染器。 建议对 Markdown 内容中的代码块使用反引号，例如：\nMarkdown```python def say_hello(): print(\"Hello!\") ``` 将呈现为：\ndef say_hello(): print(\"Hello!\") ","支持的编程语言#支持的编程语言":"如需了解支持的编程语言，转至 Chroma’s documentation。","特性#特性":"文件名 要向代码块添加文件名或标题，请设置 filename：\nMarkdown```python {filename=\"hello.py\"} def say_hello(): print(\"Hello!\") ``` hello.pydef say_hello(): print(\"Hello!\") 行号 如需设置行号，将 linenos 设置为 table，并将 linenostart 设置为起始行号：\nMarkdown```python {linenos=table,linenostart=42} def say_hello(): print(\"Hello!\") ``` 42 43 def say_hello(): print(\"Hello!\") 高亮行 显示高亮行，设置 hl_lines 为行号：\nMarkdown```python {linenos=table,hl_lines=[2,4],linenostart=1,filename=\"hello.py\"} def say_hello(): print(\"Hello!\") def main(): say_hello() ``` hello.py 1 2 3 4 5 def say_hello(): print(\"Hello!\") def main(): say_hello() 复制按钮 默认情况下，代码块复制按钮已自动启用。"},"title":"代码高亮"},"/about/privacy/":{"data":{"":"","#":"一、引言 我们致力于保护您的隐私，本隐私协议旨在说明我们如何收集、使用、披露和保护您在使用QianDu时提供的个人信息。\n二、信息收集 我们不会也不可能收集您的姓名、电子邮件地址、IP 地址等重要信息；除此之外作为社区的维护者社区成员也都有相应的义务和责任不会泄露您的github账号。\n三、信息披露 我们不会向任何第三方披露您的个人信息，不存在任何特殊情况，因为QianDu创建的初衷就是隐私技术交流社区。\n四、信息安全 正如您所了解的，QianDu是运行在本地的Pages方式，所以我们不会有任何的信息收集情况。\n五、联系安全 如果您在需要QianDu相关服务时联系了QianDu的Telegram，我们不会泄露您的Telegram账号，但Telegram相关的隐私协议请移步至Telegram阅读。\n总结：本隐私协议明确了QianDu在收集、使用、披露和保护用户个人信息方面的规定，保障用户隐私权益。"},"title":"隐私协议"},"/blog/":{"data":{"":" RSS Feed 博客 想你所想，推你想看 "},"title":"博客"},"/blog/10000/":{"data":{"":"Hugo是一个流行的静态网站生成器，旨在帮助开发者快速构建高性能的网站。它是基于 Go 语言开发的框架，具有速度快、易于使用和开发灵活的特点。Hugo 支持Markdown 语法，我们可以将自己的文章写成Markdown 的格式，放在我们用Hugo 创建的博客系统中，从而展示给他人。\n但Hugo对于新手来说会不太友好。所以千度将Hugo的完整从安装部署到开发的完整教程写下来分享给我的朋友们。","10给博客添加评论功能#10，给博客添加评论功能":"博客有了评论功能才能跟读者互动，所以评论功能对一个博客来说也是必不可少的。\n可用的评论系统插件 有挺多的，比如：\n畅言 LiveRe gitment gitalk Valine 在这几个之中，我比较喜欢的Valine，因为其它几个在评论的时候都需要读者登录账号，授权等等，我觉得这样比较麻烦，会让读者失去评论的兴趣。\n而Valine 不需要读者登录就可以对文章进行评论，而且简洁高效。下面我们主要介绍如何使用Valine 来为我们的博客系统增加评论功能。\n10.1，注册登录leancloud 账号 首先需要注册并登录一个leancloud 账号，登录账号之后，进入下一步。\n10.2，创建一个应用并记录App Id 和App Key 登录账号后，进入控制台，点击创建应用来创建一个应用\n应用创建好以后，进入刚刚创建的应用，点击左下角的设置\u003e应用Key，就能看到你的APP ID和APP Key了：\n10.3，创建两个存储 因为评论和文章阅读数统计依赖于存储，所以要建立两个存储 Class，分别命名为Counter （用于计数功能）和 Comment（用于评论功能）。\n左边栏找到并点击 存储，点击 创建Class:\n10.4，为应用添加安全域名 左边栏点击设置，找到安全中心，点击后会看到安全域名设置框，输入博客使用的域名，点击保存即可，比如填写的是：\nhttps://yourname.github.io/ 到这里为止，leancloud 账号的设置工作才算完成。接下来我们来看如何使用Valine 评论系统。","11使用valine-评论系统#11，使用Valine 评论系统":"这里我写一个简单html 页面，来演示如何使用Valine，代码如下：\n\u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003ctitle\u003eValine 评论测试\u003c/title\u003e \u003c!-- 引入Valine js 脚本 --\u003e \u003cscript src='https://unpkg.com/valine/dist/Valine.min.js'\u003e\u003c/script\u003e \u003c/head\u003e \u003cbody\u003e \u003ch2\u003e下面就是Valine 评论系统\u003c/h2\u003e \u003chr /\u003e \u003cdiv id=\"vcomments\"\u003e\u003c/div\u003e \u003cscript\u003e new Valine({ el: '#vcomments', appId: 'xxx',\t// 这里填写 10.2 节我们得到的App Id appKey: 'yyy',\t// 这里填写 10.2 节我们得到的App Key notify: false, verify: true, avatar: 'robohash', placeholder: '在这里评论' }) \u003c/script\u003e \u003c/body\u003e \u003c/html\u003e 这里面有一些Valine 参数需要解释一下：\n参数 作用 appId 这是在 10.2 节得到的App Id appKey 这是在 10.2 节得到的App Key notify 用于控制是否开启邮件通知功能 verify 用于控制是否开启评论验证码功能 avatar 用于配置评论项中用户头像样式 placeholder 评论框的提示符 可以参见这里查看更多配置项。\n然后将上面的html 代码放在Apache 中（也可以是其它Web Server），从浏览器中访问这个html 页面，是这样的：\n我们就可以在这里评论了。\n我们可以进入下面的页面，对这些评论内容进行管理，比如删除评论：","12在hugo-博客中使用valine#12，在Hugo 博客中使用Valine":"有些Hugo 主题就自带了Valine 评论功能，我们只需要在配置文件config.toml 中配置就可以使用。\n一般配置代码就是下面的样子：\n[params.valine] enable = true\t# 打开评论功能 appId = 'xxx' appKey = 'yyy' notify = false verify = true avatar = 'robohash' placeholder = '评论一下，说明你来过~' visitor = true 但是，有些Hugo 主题并没自带Valine 评论功能，这就需要我们自己在Hugo 框架中加入Valine 代码。\n比如，我们本篇文章中使用的hugo-theme-bootstrap4-blog 主题，就没有Valine 评论的功能。\n我们需要稍微了解一下hugo-theme-bootstrap4-blog 主题的代码结构和语法，才知道在哪里添加怎样的Valine 代码。\n下面跟着我的步骤，为hugo-theme-bootstrap4-blog 主题添加Valine 评论功能。\n12.1，编写comments.html 文件 编写代码，文件名为comments.html，并将代码放入themes/hugo-theme-bootstrap4-blog/layouts/partials/ 目录中，代码如下（如果看不懂也没有关系，照着做就行）：\n{{ if and .IsPage (ne .Params.comment false) -}} \u003c!-- valine --\u003e {{- if .Site.Params.valine.enable -}} \u003c!-- id 将作为查询条件 --\u003e {{- if .Site.Params.valine.visitor -}} \u003cspan id=\"{{ .RelPermalink | relURL }}\" class=\"leancloud_visitors\" data-flag-title=\"{{ .Title }}\"\u003e \u003cspan class=\"post-meta-item-text\"\u003e文章阅读量 \u003c/span\u003e \u003cspan class=\"leancloud-visitors-count\"\u003e0\u003c/span\u003e \u003cp\u003e\u003c/p\u003e \u003c/span\u003e {{- end }} \u003cdiv id=\"vcomments\"\u003e\u003c/div\u003e \u003cscript src=\"//cdn1.lncld.net/static/js/3.0.4/av-min.js\"\u003e\u003c/script\u003e \u003cscript src='//unpkg.com/valine/dist/Valine.min.js'\u003e\u003c/script\u003e \u003cscript type=\"text/javascript\"\u003e new Valine({ el: '#vcomments' , appId: '{{ .Site.Params.valine.appId }}', appKey: '{{ .Site.Params.valine.appKey }}', notify: {{ .Site.Params.valine.notify }}, verify: {{ .Site.Params.valine.verify }}, avatar:'{{ .Site.Params.valine.avatar }}', placeholder: '{{ .Site.Params.valine.placeholder }}', visitor: {{ .Site.Params.valine.visitor }} }); \u003c/script\u003e {{- end }} {{- end }} 12.2，使用comments.html 文件 在themes/hugo-theme-bootstrap4-blog/layouts/_default/single.html 文件中加入下面代码，引入comments.html 文件：\n{{ partial \"comments.html\" . }} 你在single.html 的什么位置加入这行代码，Valine 评论区就在页面的什么位置。\n12.3，修改配置文件 在配置文件config.toml中加入下面配置项：\n[params.valine] enable = true\t# 打开评论功能 appId = 'xxx'\t# 填写正确的appId appKey = 'yyy'\t# 填写正确的appKey notify = false verify = true avatar = 'robohash' placeholder = '评论一下，说明你来过~' visitor = true\t# 开启计数功能 重启博客系统，访问博客中的文章，可见文章中就出现了Valine 评论区：\n到此为止，我们就在Hugo 博客中加入了评论功能。","9将博客部署在git#9、将博客部署在Git":"建好自己的博客后，需要将其部署在公网，才能让别人访问。有两种方法：\n购买自己的域名和服务器，将博客部署在上面。 将博客托管在github。 将博客托管在其他如cloudface分发平台 这里我们介绍第2中方式。\n9.1、准备要部署的内容 要想讲博客部署在github，首先得有一个github 账号。\n然后需要在github 上创建一个仓库，用于存放我们的博客系统。\n我们创建的仓库的名字应该是这种格式\"账户名.github.io\"，比如我创建的仓库的名字为\"codeshellme.github.io\"。\n要向仓库中存放的内容，使用hugo 命令生成的。在myblog 目录下，运行hugo 命令：\n\u003e\u003e\u003e hugo | EN -------------------+----- Pages | 14 Paginator pages | 0 Non-page files | 0 Static files | 1 Processed images | 0 Aliases | 6 Sitemaps | 1 Cleaned | 0 Total in 74 ms 执行成功后，会生成一个public 目录，这个目录中的内容，就是我们博客系统的所有内容，我们需要将这些内容存放在Git 仓库中。\n9.2、部署到Git 按照如下步骤将博客内容上传到Git 仓库，在public 目录下，依次执行下面的命令：\n# 初始化仓库 git init # 将所有内容添加到git git add . # 提交到git 本地 git commit -m \"我的博客第一次提交\" # 关联到远程git，注意这里需要写你自己的git 地址 git remote add origin https://github.com/yourname/yourname.github.io.git # 推送到远程git git push origin master 9.3、访问公网地址 经过上面的步骤，我们就将博客内容托管在了github。那么你的博客的地址将是这种格式：\nhttps://仓库名字 例如博客地址就是：\nhttps://yourname.github.io 访问这个地址就可以访问我们的博客了。\n如果以后我们写了新的博客，则需要再使用hugo 命令生成新的内容，再将新的内容push 到Git 仓库就可以","hugo-安装#Hugo 安装":"在Windows 中安装Hugo 首先安装choco 包管理器，需要在管理员权限下运行cmd，执行如下命令，一般情况下，网络没有问题，即可安装成功：\npowershell -NoProfile -ExecutionPolicy unrestricted -Command \"iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))\" # 设置环境变量 SET PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin 然后使用choco 安装 hugo：\n# 墙内安装可能较慢 choco install hugo -confirm 在MacOs 中安装Hugo 使用brew 命令安装：\nbrew install hugo 在Linux 中安装Hugo 在Linux 中可以使用snap 命令来安装，执行下面命令：\nsnap install hugo 如果你的Linux 是Ubuntu 版本，也可是使用apt 来安装，但是apt 安装的hugo 可能不是最新版的，这样会对一些hugo 主题的使用有所限制。\n这种情况下我们可以到hugo 的github 仓库 中下载安装包来安装hugo，我们可以下载一个deb 包，然后使用如下命令安装：\ndpkg -i \u003cpackage.deb\u003e 检查Hugo 是否安装成功 不管在哪种系统中安装Hugo，最后我们都可以使用下面命令查看Hugo 是否安装成功：\n\u003e\u003e\u003e hugo version hugo v0.136.5-46cccb021b windows/amd64 BuildDate=2024-10-24T12:26:27Z VendorInfo=gohugoio 检查go与Hugo环境版本信息 #go 版本 go version go1.11.5 linux/amd64 #版本和环境详细信息 hugo env Hugo Static Site Generator v0.54.0 linux/amd64 BuildDate: 2019-02-22T08:11:04Z GOOS=\"linux\" GOARCH=\"amd64\" GOVERSION=\"go1.11.5\" ","hugo-的配置文件#Hugo 的配置文件":"博客的配置文件可以根据自己的需要修改，我们来看下Bootstrap v4 主题的配置文件，这些配置属性通过应为并不难理解。\n配置文件中属性的内容我做了修改，并添加了中文注释。\n# Hugo 属性设置 # 网站地址 baseurl = \"https://localhost:1313/\"\t# 网站语言 languageCode = \"en-us\"\t# 网站title title = \"我的博客\"\t# 主题的名字，这个要跟myblog/themes 目录中的子目录的目录名一致 theme = \"hugo-theme-bootstrap4-blog\"\t# home/category/tag 页面显示的文章数 (Default: 10) paginate = 5 # home/category/tag 页面用于摘要的字数 (Default: 70) summaryLength = 50 # optionally override the site's footer with custom copyright text # copyright = \"Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).\" #googleAnalytics = \"UA-123-45\" #disqusShortname = \"XYW\" # 博客链接的路径格式 [permalinks] posts = \"/:year/:month/:title/\" page = \"/:slug/\" # 顶部栏 [[menu.navbar]] name = \"首页\" url = \"http://localhost:1313\" # 侧边栏，可以写多个 [[menu.sidebar]] name = \"新浪\" url = \"https://www.sina.com\" [[menu.sidebar]] name = \"Github\" url = \"https://github.com\" # Theme 属性设置 # [params] # Site author author = \"作者名\" # homepage 页描述信息 description = \"我的博客站点\" # Show header (default: true) #header_visible = true # Format dates with Go's time formatting date_format = \"Mon Jan 02, 2006\" # verification string for Google Webmaster Tools #google_verify_meta = \"BAi57DROASu4b2mkVNA_EyUsobfA7Mq8BmSg7Rn-Zp9\" # verification string for Bing Webmaster Tools #bing_verify_meta = \"3DA353059F945D1AA256B1CD8A3DA847\" # verification string for Yandex Webmaster Tools #yandex_verify_meta = \"66b077430f35f04a\" # Optionally display a message about the site's use of cookies, which may be # required for your site in the European Union. Set the parameter below to a # page where the user can get more information about cookies, either on your # site or externally, for example: #cookie_consent_info_url = \"/cookie-information/\" #cookie_consent_info_url = \"http://cookiesandyou.com\" # show sharing icons on pages/posts (default: true) #sharingicons = true # Display post summaries instead of content in list templates (default: true) #truncate = true # Disable the use of sub-resource integrity on CSS/JS assets (default: false) # Useful if you're using a CDN or other host where you can't control cache headers #disable_sri = false [params.sidebar] # Optional about block for sidebar (can be Markdown) about = \"我的博客[简单示例](http://localhost:1313/).\" # 侧边栏显示最近几条文章 (Default: 5) #num_recent_posts = 2 [params.social] # Optional, used for attribution in Twitter cards (ideally not a person # for example: nytimes, flickr, NatGeo, etc). # See: https://dev.twitter.com/cards/types/summary-large-image twitter = \"username\" # Default content language for Hugo 0.17's multilingual support (default is \"en\") # See: https://github.com/spf13/hugo/blob/master/docs/content/content/multilingual.md #DefaultContentLanguage = \"en\" # Languages to render #[languages.en] #[languages.bg] # Bulgarian date format is dd.mm.yyyy #date_format = \"02.01.2006\" # vim: ts=2 sw=2 et 我们使用以上配置文件，再次启动服务即可","hugo丰富工具集#Hugo丰富工具集":"除了强大的内容管理系统外，Hugo 还有很多很好用的内置模板及工具函数，满足不同需求情况下提升搭建效率，抽象实现细节，更专注于站点的搭建，诸如：\n资源类型列表的分页模板 - Pagination 这个针对只有列表页的需求，比如博客，发版历史，新闻类等，好用的分页模板，轻松的就帮你完成了。\n资源 RSS 模板 - RSS 对于资讯型的站点必不可少，官方已内置了默认的 rss 模板，只需要添加一行代码，即可搞定 rss，当然还支持个性化定制。\n各类内容及字符串处理工具函数 - Functions 这个不用多说，对应程序中的各类常见的字符串替换，Hugo 都有着良好的支持，同时它还支持类似 Pipe 管道的方式，将处理内容以 | 分隔层层传递下去，就像我们在 Linux 输入的命令一样。\n好用的 CLI 工具 内置了 http server 方便本地开发，同时又能将整个站点打包成纯静态的资源，方便了对于部署的操作和维护成本，可以一键初始化并启动项目，开箱即用的感觉，上手容易。\n好用的内容管理工具 迅速提取博客内容的目录导航 - TableOfContents 使用此工具函数，会根据你当前的文章内容，提取目录概要，节省了生成锚点内容的时间。 便捷获取文章的概览内容 - Summary 便捷获取文章的图片资源 - Image Processing 自定义 URL 的规则 - URL Management 以上便是我们在实践中，有接触过的一些 Hugo 比较好用的工具，当然它提供的远比这个更丰富，更多工具可查看参考官方文档。","hugo命令大全#Hugo命令大全":"Hugo常用命令 #编译生成静态文件并输出到public目录\thugo #编译生成静态文件并启动web服务 hugo server #或 hugo server --bind=\"0.0.0.0\" #创建文章 hugo new index.md #在content/文件夹可以看到，此时多了一个markdown格式的文件index.md，打开文件可以看到时间和文件名等信息已经自动加到文件开头，包括创建时间，页面名，是否为草稿等。 #创建一个新的文章，指定文章路径、名称和文件扩展名。 hugo new post/my-article.md #启动开发服务器，并包括草稿（draft）文章在内。 hugo server -D #生成静态网站文件，包括草稿（draft）文章在内。 hugo -D #生成静态网站文件之前清除缓存。 hugo --gc #生成静态网站文件之前清除缓存并压缩代码。 hugo --gc --minify #将生成的网站文件部署到指定的部署目标，如 GitHub Pages、Netlify 等。 hugo deploy 常用参数 --bind=\"127.0.0.1\" #服务监听IP地址； -p, --port=1313 #服务监听端口； -w, --watch[=true]\t#监听站点目录，发现文件变更自动编译； -D, --buildDrafts #包括被标记为draft的文章； -E, --buildExpired #包括已过期的文章； -F, --buildFuture #包括将在未来发布的文章； -b, --baseURL=\"www.datals.com\" #服务监听域名； --log[=false]: #开启日志； --logFile=\"/var/log/hugo.log\": #log输出路径； -t, --theme=\"\" #指定主题； -v, --verbose[=false]: #输出详细信息 组合使用方法 hugo server -t hyde --buildDrafts --baseURL=http://www.yourname.com --bind=0.0.0.0 --port=80 -w -t hyde #使用hyde主题，如果使用-t 选择了主题会将当前默认的主题覆盖； --buildDrafts\t#参数将生成被标记为草稿的页面，是否发布：hugo 会忽略所有通过 draft: true 标记为草稿的文件。必须改为 draft: false 才会编译进 HTML 文件。 --baseURL=http://www.yourname.com #站点监听域名 --bind=0.0.0.0 #监听全部网段 --port=80 #服务监听端口 -w #如果修改了网站内的信息，会直接显示在浏览器的页面上，不需要重新运行hugo server，方便我们进行修改。 hugo命令使用方法详解 执行hugo命令，站点目录下会新建文件夹public/，生成的所有静态网站页面都会存储到这个目录， 如果使用Github pages来作为博客的Host，你只需要将public/里的文件上传就可以。 如果使用nginx作为web服务配置root dir 指向public/ 即可；","常用的git命令#常用的git命令":" git add . //添加所有修改或更新的文件到 Git 仓库 git commit -m \"Update\" //提交你的更改 git push origin master //推送你的更改到 GitHub 仓库 git init //初始化一个仓库：这将在当前目录创建一个新的Git仓库。 git clone \u003c仓库URL\u003e //克隆仓库：这将复制远程仓库的内容到本地。 git add \u003c文件名\u003e //添加文件到暂存区：将指定的文件添加到暂存区，准备提交。 git commit -m \"提交信息\" //提交更改：将暂存区的更改提交到版本历史中。 git status //查看状态：查看工作目录和暂存区的状态。 git log //查看提交历史：显示提交历史记录，包括作者、日期和提交信息。 git checkout \u003c分支名\u003e //切换分支：切换到指定的分支。 git branch \u003c新分支名\u003e //创建分支：创建一个新的分支。 git merge \u003c目标分支名\u003e //合并分支：将目标分支的更改合并到当前分支。 git pull //拉取远程更改：从远程仓库拉取最新更改并合并到当前分支。 git push //推送更改：将本地提交推送到远程仓库。 git rm \u003c文件名\u003e //删除文件：从版本控制中删除文件。 git mv \u003c旧文件名\u003e \u003c新文件名\u003e //重命名文件：对文件进行重命名，并将更改提交到版本控制。 git remote -v //查看远程仓库：查看与本地仓库关联的远程仓库。 git tag \u003c标签名\u003e //创建标签：创建一个标签，通常用于标记版本。 好了，今天就先总结到这吧~下期再见！","快速开始hugo#快速开始Hugo":"使用Hugo创建博客 #新建一个新的工程 hugo new site myblogName #这个命令会创建一个名为myblog 的目录，这就是博客的根目录。目录结构如下： ├── archetypes │ └── default.md ├── config.toml\t# 博客站点的配置文件 ├── content\t# 博客文章所在目录 ├── data\t├── layouts\t# 网站布局 ├── static\t# 一些静态内容 └── themes\t# 博客主题 #下载官网主题放到 …/blog/themes/目录下 cd themes git clone https://github.com/vjeantet/hugo-theme-casper.git casper #下载下来的主题会放在themes目录中： └── hugo-theme-bootstrap4-blog ├── CHANGELOG.md ├── LICENSE.txt ├── README.md ├── archetypes ├── assets ├── exampleSite # 本主题示例内容 | ├── content\t# 示例博客文章 │ |-- static │ |-- config.toml\t# 本主题配置 ├── i18n ├── images ├── layouts ├── package-lock.json ├── package.json ├── screenshot.png ├── source ├── theme.toml\t└── webpack.config.js Hugo目录介绍 ... ├── config // 模板需要的内容语料 | ├── default | | ├── config.toml | | └── config.cn.toml | | └── config.en.toml | | └── footer.cn.toml | | └── footer.en.toml | | └── ... ├── content // 内容部分，日常多由运营同学管理维护 | ├── en // 国际化支持 | | ├── posts // 内置默认的博客（post)类型资讯 | | | ├── post-01.md | | | ├── post-02.md | | └── release // 新增的 release 类型资讯 | | | ├── release-01.md | | | └── release-02.md | ├── cn | | ├── posts | | | ├── post-01.md | | | ├── post-02.md | | └── release | | | ├── release-01.md | | | └── release-02.md ... ├── themes // 站点的主题 | ├── nebula-theme // 主题名 | | ├── layout // 模板 | | | ├── _default // 默认的模板 | | | | ├── baseof.html // 渲染的种子页面定义 | | | | ├── list.html // 默认博客 post 类型资讯 - 列表页的使用模板页面 | | | | ├── single.html // 默认博客 post 类型资讯 - 详情页使用模板页面 | | | ├── partials // 复用的模板片段 | | | | ├── head.html | | | | ├── footer.html | | | | ├── menus.html | | | | ├── ... | | | ├── index.html // 首页（'/') 默认会使用的模板 | | | ├── section | | | | ├── release.html // 新增资讯类型 release 渲染时使用的模板页面 - 发布历史页面 | | | | ├── news.html // 新增资讯类型 news 渲染时使用的模板页面 - 媒体新闻页面 ... 到此hugo即可算安装完成，让我们继续学习","编写博客文章#编写博客文章":"你只需要按照Markdown 的格式编写自己的文章，让后将写好的文章放在myblog/content/posts，hugo 就会读取到这片文章，并将这片文章展示在比的博客中。\n与普通Markdown 文章不一样的地方是，你需要在文章的开头写入如下结构的内容，这些内容包含在三杠线之间，在三杠线下边就是Markdown 的正文了：\n--- 文章属性内容 --- Markdown 正文 这些内容会被hugo 解析，作为当前文章的一些属性，常用的属性如下：\n--- title: \"文章标题\"\t# 文章标题 author: \"作者\"\t# 文章作者 description : \"描述信息\"\t# 文章描述信息 date: 2015-09-28\t# 文章编写日期 lastmod: 2015-04-06\t# 文章修改日期 tags = [\t# 文章所属标签 \"文章标签1\", \"文章标签2\" ] categories = [\t# 文章所属标签 \"文章分类1\", \"文章分类2\", ] keywords = [\t# 文章关键词 \"Hugo\", \"static\", \"generator\", ] next: /tutorials/github-pages-blog\t# 下一篇博客地址 prev: /tutorials/automated-deployments\t# 上一篇博客地址 --- 比如我们编写了这样一篇文章，文件名为my-first.md：\n--- title: \"我的第一篇博客\" author: \"我是作者\" description : \"这是描述信息\" date: 2018-09-18 lastmod: 2018-09-26 tags : [ \"我的博客标签\", ] categories : [ \"我的博客分类\", ] keywords : [ \"我的博客关键字\", ] --- 这里是Markdown 正文 我们将myblog/content/posts 目录中的其它文章删除，只留我们自己的这篇文章：\n. └── my-first.md 使用hugo server 重启博客服务，打开地址网址可以看到现在的博客中，只有我们自己写的文章："},"title":"使用Hugo搭建网站最完整的教程"},"/blog/10001/":{"data":{"":"","vcc的优点和缺点#VCC的优点和缺点":" 银行账户信息的保护 虚拟信用卡有助于保护您的银行账户/信用卡信息的安全。使用虚拟信用卡付款比使用实体信用卡更可靠、更安全。您的任何详细信息都不能与商家共享，因为它是一个随机的在线号码。因此，使用 VCC 可以防止任何潜在的信用卡盗窃，并且其他人无法使用您的 VCC 信息进行在线交易。 您可以自己设置您的消费限额 虚拟信用卡可能会发生变化，您可以在发卡时指定您的虚拟信用卡的信息，不像真正的信用卡已经由发卡机构完成。VCC 详细信息是根据您的需要设置的，并且可以在整个使用期限内更改。VCCs 实际上可以帮助您规范您在特定网站上的消费方式，如果您想拒绝自己花费过多，您还可以设置您的消费限额。有时，虚拟信用卡可能与真实信用卡一样出现超额后果，请努力遵守您的 VCC 的规则和规定。尽管供应商确定了限制，但这也让我们有理由检查符合您要求的供应商。 全球接受 在网上交易中，VCC在很多电商业务下都有一个标准、成名，也是一种交易方式。供应商已经对 VCC 产生了这种信任感，因为它是一种在网络上进行买卖的安全方式。虽然，一些网站或在线业务不接受它。它需要一个支付系统来处理它，并不是所有的商家都有这个系统。著名的在线业务都有虚拟信用卡读卡器，但这个问题是针对中小型在线业务提出的。 缓解货币汇率 虚拟信用卡是从国际在线企业购物的理想选择。VCC 会自动帮助您将您的货币信用兑换成您必须支付的货币。这是一项优于其他货币的优惠，例如，如果您从 Americane 购买，您必须用美元向您的信用卡收取美元来经营您的业务-商业。使用 VCC，您可以轻松地将 EUD 兑换成美元，从而节省您的在线交易时间。努力确认您希望生成的卡中是否有此功能。 ","为什么我想要一个可靠的-vcc#为什么我想要一个可靠的 VCC？":"银行和电子商务企业向用户提供自己的虚拟信用卡。这些 VCC 各有优缺点。预计您会在 最佳虚拟信用卡开卡平台中选择适合您的一家。这种保护信息的独特特性在使 VCC 成为最可靠的网上支付现金方式之一方面发挥了关键作用。您可以查看这些最佳虚拟信用卡中的任何一种，以进行安全的在线交易。","什么是虚拟信用卡virtual-credit-card#什么是虚拟信用卡（\u003cstrong\u003eVirtual Credit Card\u003c/strong\u003e）？":"","对虚拟信用卡开卡平台的最终思考#对虚拟信用卡开卡平台的最终思考":"对于上述所有这些虚拟信用卡，您必须完美地选择符合您要求的虚拟信用卡。如前所述，所有这些 VCC 提供商都有局限性和独特的功能，使它们在公司中脱颖而出。例如，作为一名电商卖家，Nobepay虚拟信用卡是提供给您的最佳选择。为什么我想要一个可靠的 VCC？\n银行和电子商务企业向用户提供自己的虚拟信用卡。这些 VCC 各有优缺点。预计您会在 最佳虚拟信用卡开卡平台中选择适合您的一家。这种保护信息的独特特性在使 VCC 成为最可靠的网上支付现金方式之一方面发挥了关键作用。您可以查看这些最佳虚拟信用卡中的任何一种，以进行安全的在线交易。\n如果你对这篇评测推荐感兴趣，想了解更多关于虚拟信用卡的相关评测，欢迎访问qiandu.org/tags/虚拟信用卡/ ","最优虚拟信用卡开卡平台申请#最优虚拟信用卡开卡平台申请":"什么是虚拟信用卡（Virtual Credit Card）？ 顾名思义，虚拟信用卡就是虚拟的信用卡。\n随着技术的发展，大多数在线购物服务都使用信用卡进行交易。虚拟信用卡存在于许多信用卡的扩展中，它有助于在网上交易中隐藏您真实信用卡的信息和详细信息。实体信用卡和虚拟信用卡之间的显着区别之一是后者没有物理形式，因此它是虚拟的，因为它不能用于物理交易，而是用于在线交易，这与实体信用卡片不同。基于信用卡信息被盗的概率，虚拟信用卡还可以帮助保护真实的信用卡信息免受黑客攻击。\n虚拟信用卡可以批量无限开卡，可以自定义卡片的信息或者是直接由系统生成一套信息，这是为了保护用户个人的隐私安全问题，毕竟国外的环境和国内不一样，很容易被盗刷，所以虚拟卡也有保障持卡人资金安全的用处。\n虚拟信用卡的主要使用场景： 海外广告扣费：Facebook广告费绑卡跑广告、Google广告、Tiktok Ads等等直接绑定虚拟卡进行广告费扣费；\n亚马逊等平台店铺相关业务：Amazon亚马逊批量测评都需要用到虚拟卡的绑定、亚马逊批量注册店铺、ebay、Lazada、虾皮店群营销等等，虚拟卡都少不了；\nDropshipping下单 ：另外对于做Dropshipping的卖家来说，绑定虚拟卡在速卖通等电商平台进行扣费下单，很方便，如果是国内信用卡，被拒概率很大；\n联盟\\营销\\Affiliate：就是跨境联盟营销，网赚类的，按CPS或者CPA赚取佣金的media buy，同样也会使用到虚拟卡；\n海外电商软件月租扣费：电商需要用到的月租扣费，例如shopify、店匠、siteground等等，或者是一些工具类网站的月租，都可以绑定虚拟卡去进行代扣，当然，我们需要每个月充值足数进这张虚拟卡余额中。\n海外工具免费试用预绑定：很多海外工具都会在注册的时候提供免费试用的机会，但是申请的时候很多都需要提供一张扣费的信用卡信息，以便于免费试用完之后进入正式套餐直接扣费。很多人直接绑定国内信用卡，忘记在免费期内解绑，最后被扣了费，这种事情是经常发生。\n注册海外各种类型账号：注册美区PayPal账号，需要有一张卡作为验证，那么我们就生成一张自定义信息的虚拟卡即可，直接用这张卡去过验证即可；美区Apple ID绑卡、美区Nitendo账号注册，在美区eshop中绑定后购买游戏，等等。\n海外购物海淘：海外购物批量抢货最容易发生被砍单的问题，大部分都是因为信用卡被拒付导致的，有些平台不支持非本地信用卡，这个时候就需要美国虚拟卡来帮助我们完成购物，能够大大的降低被砍单的几率。\n海外旅游消费：在海外旅游线上预定酒店、各种线上预定的消费场景都能使用。包括国内的一些平台支持绑定海外信用卡的都能够使用虚拟卡来进行消费，虽然说有一定的手续费。\n最佳虚拟信用卡开卡平台申请 最优虚拟信用卡开卡平台申请 福田卡FotonCard虚拟信用卡 跨境电商行业专用虚拟信用卡平台\nFotonCard虚拟信用卡平台，适用于跨境电商、广告投放、付费订阅等业务场景，自助注册充值开卡。\n您可以通过此平台创建自己的香港/新加坡/英国和美国虚拟信用卡。 **美国VISA：**428837/485932/404038/441112\n**美国Master：**540524/556766/559666/556150/531993/524897/559292/556371/553370/553437/556167\n**香港VISA：**418122/472593OR436797\n**香港Master：**529587/538738/526144417969/222929/222934/557271\n**新加坡VISA：**450306\n**英国Master：**256000\n注意！FotonCard禁止支付或綁定以下商戶：Telegram / Apple / Twitte / YouTube / LiveChat / WIX / Uber / Alipay / WeChat / FoodPanda / Grab**\n开卡费＄2 增值费率2.5%**\n充值方式：usdt 充值转账处理费：1usdt\n仅需邮箱即可开户，无需认证（KYC）\n2023年7月5号后注册的用户须支付保证金后（可退回）才能创建卡，建议新用户至少充值$150，以确保能缴纳保证金及支付创建卡手续费。\n查看详情 \u003e\n邀请码：548569\n支持的业务场景:\n1，跨境电商平台:亚马逊、Wish、eBay、速卖通、敦煌网、沃尔玛、煤炉、Etsy、Shopify Depop、Vinted、Shopee、Lazada、新蛋、独立站等\n2，广告营销投放:Google Ads、Facebook Ads、Twitter Ads.Quora Ads、Pinterest Ads、Linedin Ads等\n3，开发者账号:谷歌开发者账号、苹果开发者账号\n4，各种物流运费支付、商旅酒店机票预定支付、留学教育缴费、跨境电商相关工具付费订阅等\n我可以创建多少张虚拟卡？\n新用户只能创建3张虚拟卡，然后您可以联系客服申请创建更多卡，并且您最多可以创建无限数量的虚拟卡。\n如何注册福田卡FotonCard账户以及如何使用？\n首先，免费注册一个帐户，注册链接：点击查看详情\n邀请码：548569（这是必需的）\n需要在电脑浏览器中打开！如果在手机上打开它，页面不会完全显示。\n转入资金。资金可以通过USDT进行添加。\n创建您需要的虚拟卡。福田卡将收取部分发卡和手续费。\n创建卡后，您可以获取卡号，有效期，安全码和其他信息。\n在哪里使用虚拟信用卡？\n例如，您可以在线购物，为Facebook广告付费，为Google广告付费以及其他用途！\nFotonCard平台具有严格的f-风险控制和反洗钱机制，仅限于广告费支付、电子商务、付费订阅等合法用途。\n如何联系客服？\n如果您有任何疑问，可以在仪表板右下角联系在线客服寻求帮助。","最佳虚拟信用卡开卡平台申请#最佳虚拟信用卡开卡平台申请":"","虚拟信用卡的主要使用场景#虚拟信用卡的主要使用场景：":""},"title":"虚拟信用卡推荐：Virtual Credit Card"},"/blog/10002/":{"data":{"#":"","今年最佳接码平台#今年最佳接码平台":"","到sms-activate注册#\u003ca href=\"https://sms-activate.guru/?ref=11384352\"\u003e到sms-activate注册\u003c/a\u003e":"今年最佳接码平台寻找最好的接码平台是一项艰巨的任务。\n但不要担心。我们为你做了所有繁重的工作。\n所以，请继续，看看我为您推荐的这一款接码平台\n1.sms-activate.org(建议使用chrome浏览器右键翻译成中文或点击右上角的中国国旗图标转成中文再使用) 目前通过本文链接注册首次充值时将获得 10% 的现金返还。请进入sms-activate\n作为顶级接码服务之一，sms-activate以其统一平台脱颖而出。它巧妙融合了虚拟商业电话、商务协作工具和客户管理软件，为那些致力于优化通信记录追踪并提升整体生产力的组织提供了一站式解决方案。其防灾VoIP呼叫加密、PBX电话转换功能至今运行稳定，可靠性极高。\n防灾 VoIP呼叫 加密转换 PBX电话 到目前为止没有中断 – 高度可靠 请进入sms-activate 自2008年起，sms-activate在虚拟电话服务领域声名鹊起。众多知名品牌如亚利桑那大学、基督教青年会和塔可钟等都对其青睐有加。\n]\n特点 ms-activate的虚拟电话产品功能丰富多样，让我们一探究竟\n协作升级：通过移动应用提供统一信息传递，包含易用的协作工具。用户可随时进行屏幕共享、即时通讯和视频会议，最多支持250人同时参与。\n在线传真：所有电话套餐均包含无限制在线传真服务，无需额外付费。如只需传真功能，可单独选择。\n通信管理：安全存储并管理来电和信息，无需手动整理，提升业务效率。\n广泛兼容：与众多行业标准产品兼容，如Azure Active Directory、Microsoft Outlook、Salesforce、Google Contacts、Calendar和QuickBooks等。\n简易设置：系统设置简单直观，迁移无忧。客户支持团队随时待命，解决您的疑难。\n优质支持：提供24/7技术支持和客户服务，支持电话、即时聊天和电邮等多种联系方式。服务质量出色，曾获史迪威金奖。在线支持中心、发布说明、指南和视频教程一应俱全。\n价格 ms-activate提供多种套餐选择：\n基本型：每用户每月21.95美元起，包含语音邮件通知、Outlook和Google联系人整合、无限虚拟传真等。\n专业版：每用户每月24.95美元起，增加呼叫记录、CRM集成等高级功能。\n企业版：每用户每月31.95美元起，无限制电话会议参与人数，更多集成选项如Oracle销售云和Amazon Chime。\nsms-activate有一个7天的免费试用期。\n如果你决定订阅年费，你将节省20%的费用。\n总结 ms-activate为各类规模的组织提供多样化方案，是VoIP行业的佼佼者。凭借具有竞争力的价格和丰富的功能，它堪称最佳接码供应商之选。无论您是小型企业还是大型集团，sms-activate都能满足您的需求，助力您的业务腾飞。\n到sms-activate注册 ","请进入sms-activate#\u003ca href=\"https://sms-activate.guru/?ref=11384352\"\u003e请进入sms-activate\u003c/a\u003e":""},"title":"接码平台推荐:SMS Activate"},"/blog/10003/":{"data":{"":"","平台介绍#\u003cstrong\u003e平台介绍\u003c/strong\u003e":"","开卡步骤#\u003cstrong\u003e开卡步骤\u003c/strong\u003e":"","支付场景#\u003cstrong\u003e支付场景\u003c/strong\u003e":"","最后说明#\u003cstrong\u003e最后说明\u003c/strong\u003e":"PokePay 作为一款基于数字虚拟货币的创新型虚拟信用卡，为用户提供了多币种 IBAN 账户服务。它不仅支持港币、欧元、美元等传统主流货币，还能处理 USDT/ETH/BTC 等加密货币的转账和消费。这款产品的应用场景之广，使其成为日常跨境支付需求用户的理想之选。目前，PokePay 提供 VISA 和万事达两大品牌的虚拟卡（美金）和实体卡（港币）申请服务。\n平台介绍 PokePay的功能十分全面，支持包括 USDT、USDC、BTC、ETH 在内的多种虚拟货币充值和提现。用户可以轻松使用它订阅 ChatGPT Plus、Netflix、YouTube 等热门海外服务，几乎涵盖了所有跨境业务需求。值得一提的是，PokePay 不仅提供虚拟卡，还有实体卡选项。实体卡的优势在于可以满足各种线下支付场景，支持 ATM 取款和 POS 机刷卡消费等，而且对大陆用户开放申请。\nPokePay 直通车：https://app.pokepay.cc/\n**PokePay 邀请码：**162739\n支付场景 PokePay 目前支持多种常见支付场景，用户可以通过币安、OKX、火币等平台充值 USDT/USDC，也支持冷钱包充值。不过需要注意的是，虚拟卡开通费用为 20USDT，实体卡则需 99USDT，这些费用在开卡时会直接扣除，而非作为卡内余额。对于 USDT 持有量不多的用户来说，这可能会稍显昂贵，但考虑到它支持微信绑定消费，仍具有一定吸引力。\n常见支付场景 支持是 √，不支持是 × 微信 √ 支付宝 √ ChatGPT Plus √ Apple Store √ Midjourney √ PayPal √ Amazon √ Azure √ Google Play √ Netflix √ Twitter √ 开卡步骤 1、访问PokePay官网，选择使用手机号或邮箱注册。为了信息安全，建议使用谷歌邮箱或海外手机号，尽量避免使用国内手机号，如下图：\n2、注册后，进入\"会员\"中心，找到\"KYC\"身份认证选项。如果仅开通虚拟卡，可以填写非本人信息；若申请实体卡，建议使用本人真实身份信息，如下图：\n![进行PokePay身份认证]\n3、完成\"KYC认证\"后，返回\"钱包\"页面进行 USDT 充值。虚拟卡建议充值 22 USDT，实体卡则建议 101 USDT。考虑到可能的手续费，建议多充值 2-3 USDT 以确保顺利开卡，如下图：\n4、充值完毕后，在\"卡\"页面选择开卡。星际卡的标准开卡费为 20 USDT，但使用上述邀请码注册的用户可获得优惠券，官网会提供一张 20U 减 12.8U 的优惠券，实际开卡只需 7.2 USDT，如下图：\n站长亲测 更新时间：2024-10-29，经站长亲自测试，以下平台已成功绑定并消费：微信、支付宝、苹果支付。谷歌支付已绑定但尚未消费。其他平台的测试结果将在完成后及时更新，如下图：\n推荐使用星际卡\n微信绑定\n苹果支付绑定\n谷歌支付绑定\n支付宝绑定消费星巴克\n最后说明 总的来说，PokePay 虚拟信用卡在支持的场景方面表现出色，涵盖范围广泛。然而，其开卡费用确实偏高，虚拟卡需要 20USDT + 21USDT，实体卡更是需要 99USDT + 21USDT。尽管价格不菲，但考虑到它能绑定的平台数量之多，仍然具有相当的竞争力。除了 OneKey Card 外，PokePay 是本站唯一推荐的 USDT 虚拟信用卡选择。\n如果你对这篇评测推荐感兴趣，想了解更多关于虚拟信用卡的相关评测，欢迎访问qiandu.org/tags/虚拟信用卡/ ","站长亲测#\u003cstrong\u003e站长亲测\u003c/strong\u003e":""},"title":"虚拟信用卡推荐：PokePay最稳香港U卡，美元虚拟卡无需实名，可匿名使用"},"/blog/10005/":{"data":{"":"","smsbower安全使用指南#\u003cstrong\u003eSMSBOWER\u003c/strong\u003e安全使用指南":" SMSBOWER推出了全新的虚拟短信接收号码租赁功能，这些虚拟号码虽然与传统的电话号码相似，但其设计的主要目的在于在线接收短信。此项服务能有效保护用户的真实电话号码，防止可能的滥用及隐私泄露，确保用户的安全。\n安全的短信接收服务 SMSBOWER的虚拟号码不仅兼容多种平台，还能为那些需要进行在线身份验证且不希望泄露真实号码的用户提供强有力的安全保护。\n高效管理多个账户 SMSBOWER是个人用户及专业人士的理想选择，特别适合社交媒体经理、数字营销专家或任何需要管理多个在线账户的用户。通过提供临时号码，SMSBOWER让用户无需关联个人号码即可创建和管理多个账户。这样一来，用户能有效降低因账户信息泄露而引发的风险，如数据泄露或针对性的攻击。因此，SMSBOWER成为管理个人和职业在线形象的关键工具。\n轻松接收短信并创建临时账户 对于那些需要创建虚假账户（例如进行网站或软件测试，或出于匿名需求的用户），SMSBOWER简化了这一过程。通过提供临时号码，用户能绕过传统的电话号码验证步骤。此功能在保持匿名性及保护隐私方面尤为出色，尤其适用于那些在暴露身份可能带来风险的情况下，或需要维持测试中立性的人。\n合作伙伴计划与盈利机会 除了提供短信验证和激活服务，SMSBOWER还邀请用户加入其合作伙伴计划，提供独特的赚钱机会。\n对于开发人员，SMSBOWER量身定制了管理短信激活的解决方案。通过在API请求中嵌入特定参数，开发人员可以从每一位通过其软件成功激活的客户中获得5%的佣金。要加入此计划，开发人员只需联系我们的支持团队，以激活他们的开发账户。\n合作伙伴与代理商 现有的SMSBOWER用户可通过推荐新合作伙伴赚取额外收入。每当您向朋友推荐并且他们成功注册成为活跃会员时，您就会获得奖励。您可以在账户仪表板中找到您的推荐链接，只需将此链接分享给您的朋友，一旦他们通过该链接注册，您便会收到奖励。\n网站管理员专属计划 SMSBOWER的推荐计划特别适合CPA网络、联盟营销者和网站管理员。只需使用您独特的推荐链接来注册新用户，您便可从这些用户成功激活的每个账户中赚取5%的佣金。参与该计划非常简单，您只需在SMSBOWER官网注册账户，进入推荐计划页面，使用您的推荐链接引导流量即可。对于网站管理员和数字营销人员来说，这是通过他们的在线影响力赚取额外收入的绝佳机会。\nSMSBOWER安全使用指南 步骤 1：注册并充值账户 访问SMSBOWER官网并创建账户。创建完成后，您可以通过多种安全的支付方式（包括Stripe和加密货币）为账户充值。\n点击我选择注册\n步骤 2：选择服务 账户注册并充值后，您可以从SMSBOWER提供的服务列表中选择符合需求的服务。平台专为帮助用户安全接收验证码而设计，避免了使用个人电话号码的风险。\n步骤 3：购买号码并进行注册 一旦选择好服务，您可以购买一个临时号码并用其注册新的测试或虚假账户。这样既能保护您的个人号码隐私，又能大大减少被骗的风险。特别提醒：使用促销代码 “197088” 即可获得100卢布的奖励！","合作伙伴与代理商#合作伙伴与代理商":"","合作伙伴计划与盈利机会#合作伙伴计划与盈利机会":"","安全的短信接收服务#安全的短信接收服务":"","总结#总结":"SMSBOWER致力于为用户提供高质量、安全且易于使用的短信验证服务。无论您是希望保护网络隐私、管理多个账户，还是为了测试或匿名目的创建临时账户，SMSBOWER的服务都能为您提供强有力的支持。","网站管理员专属计划#网站管理员专属计划":"","轻松接收短信并创建临时账户#轻松接收短信并创建临时账户":"","高效管理多个账户#高效管理多个账户":""},"title":"接码平台推荐:SMSbower"},"/blog/10006/":{"data":{"sms-man接码优势#SMS-MAN接码优势":"在SMS-MAN平台，您可以接收来自全球270多个国家的虚拟电话号码短信。用户能够灵活选择所需的国家/地区和注册服务，且还支持与商户进行API对接等操作。\n同时，平台支持多种支付系统，用户可使用美元、人民币、卢布，甚至虚拟货币支付虚拟号码，极大地方便了虚拟号码的获取。\n此外，SMS-MAN提供高度的匿名性。网站不会要求用户进行身份验证、上传证件，或分享任何个人信息，确保隐私安全。","如何使用sms-man平台#如何使用SMS-MAN平台":"以下以注册Instagram账号为例说明具体使用流程：\n访问 sms-man.com，开始注册流程前，建议先了解平台所提供的所有服务和价格。平台提供来自200多家运营商的号码，支持在100多个顶级在线服务上进行注册。 进行快速注册。只需简单几步操作，即可成为我们的用户。 为您的账户充值，可使用微信、支付宝、Qiwi、比特币等多种方式。 选择所需国家和社交网络服务。 使用提供的号码在社交平台上进行标准注册。 验证码将发送至 sms-man.com的个人消息中，将其复制并粘贴至注册页面，即可验证您的新账户。 ","常见问题#常见问题":"如何使用支付宝、微信进行充值 选择微信或支付宝支付，您将看到如下页面，用户可以选择充值人民币35元、100元、500元、1000元、5000元和10000元。选择金额后点击进入支付页面：\n点击选择金额进入支付页面。如下图，勾选“我同意协议”后进入支付步骤：\n点击“我同意支付”后，将进入下一步支付页面，选择支付宝或微信支付并确认付款。\n付款成功后，您将收到一串代码，如：5RMB-48874b5fe9a0d6e903dd-439798f672edssdsfsab7，需将该代码输入至我们的支付页面，确认后账户会自动完成充值。\n使用注册的手机号后，如何找回账号密码 注册的账号可以通过邮箱找回。","平台地址#平台地址":"https://sms-man.com/cn","接码验证码平台是什么#接码验证码平台是什么？":"接码验证码平台是什么？对于网络初学者而言，接码验证码平台可能并不熟悉，但对于经常活跃在网络上的人来说，这类平台可是一个极具便利的工具。甚至有人通过接码实现了“日赚万元”的收益。那么他们是如何做到的呢？\n今天，我们来一起了解一下：薅羊毛必备知识——接码工具。"},"title":"接码平台推荐:SMS-MAN"},"/blog/10007/":{"data":{"":"","#":"在我们现在使用的网络中，远程访问家里的设备和公司内网已经成了常见需求，主流的方案有ipv4/ipv6方案，vpn隧道，vps中转等。Tailscale的组网方式相对简单，且不依赖公网。\n对比 **IPv4/IPv6 公网：**IPv4 相对 IPv6 而言要简单得多，只需要配置动态 DDNS 解析和端口转发与放行即可。而 IPv6 则相对复杂许多，一般需要使用运营商的高级管理员账户自行开启 IPv6 功能，然后在光猫和主路由上进行相应的配置，才能获取到 IPv6 公网地址。接下来，还需要进行动态 DDNS 解析和端口转发与放行。\n随着运营商逐步封锁高级管理员账户的权限，获取 IPv6 公网 IP 变得越来越复杂。\n**Tailscale：**Tailscale 几乎不需要任何配置。只要安装客户端并登录账户，设备之间便能自动组网，无需担心 NAT 穿透、端口转发等问题。\n**双层保障：**从安全性上讲，Tailscale 更加安全且简单，但在网速方面，公网 IP 通常要优于 Tailscale。\n对我来说，小白才会做选择，而我选择全都要，哈哈！这种双重保障方式能够确保在某些场景下提供额外的可靠性。比如，当你不在家里时，可能需要对软路由进行升级或更新动态解析插件。如果此时 IPv6 解析出现问题，导致无法访问内网设备，Tailscale 就可以帮你顺利连接到内网，解决问题。\n安装与配置 在主路由上安装Tailscale，如果使用的是我编译的插件是自带Tailscale。由于我编译的很精简并不适用所有人，只以x86架构的机器上测试为准。提前注册好Tailscale账号，ssh连接到主路由执行下面命令。\nopkg update wget -O /tmp/luci-app-tailscale_1.1.3_all.ipk https://github.com/asvow/luci-app-tailscale/releases/download/v1.1.3/luci-app-tailscale_1.1.3_all.ipk wget -O /tmp/luci-i18n-tailscale-zh-cn_240923.10793_all.ipk https://github.com/asvow/luci-app-tailscale/releases/download/v1.1.3/luci-i18n-tailscale-zh-cn_240923.10793_all.ipk opkg install /tmp/luci-*-tailscale*.ipk 执行完命令在服务里面即可看到Tailscale，如果没有重启检查，如果还是没有就需要检查兼容性问题了。下面启动服务。\n[] 启动相关配置后获取登录地址并绑定账号。\ntailscale up 打开子网路由，网段需要填写自己的网段。\ntailscale up --advertise-routes=10.10.10.0/24 --accept-dns=false 到网页端开启子网路由服务，并禁用密钥过期。\n[]\n添加接口设置防火墙 创建一个网络接口名字tailscale协议是静态地址设备选择tailscale0，接下来在常规设置里面把ipv4改成网页控制台路由器分配的ip地址，子网掩码改成255.0.0.0保存就可以了。*子网互通要不要打开取决于自己，子网互通可以帮助远程设备访问路由器网络，比如你的路由器安装了某知名不可描述软件，当在手机端打开vpn时，不仅能访问家里的设备，还可以使用它提供的服务。*后期可能会加一篇另外一个插件加ipv6用这个的服务，不使用tailscale提供的子网互通是因为网络可能存在瓶颈，但是简单浏览网页应该不影响。\n子网互通同时需要在主路由开启和网页端控制台开启。开启成功是不会显示感叹号提示的。先添加接口，子网互通才能开启。\n[]\n[]\n添加设备并访问 直接在需要访问的设备上下载tailscale客户端并登录，登录需要使用与主路由上相同的账号，登录成功即可看到自己的设备在线，打开vpn,使用非局域网即可访问。内网如何访问，非局域网设备就如何访问就行。\n[]"},"title":"Tailscale异地组网：实现远程访问内网设备"},"/blog/10008/":{"data":{"":"","#":"最近从lede固件更换immortalwrt总算告一段落了，今天总结第一期。\n说明 ipv6进阶：我是如何实现远程访问内网设备？ipv6进阶：我是如何实现远程访问内网设备？ipv6进阶：我是如何实现远程访问内网设备？ipv6进阶：我是如何实现远程访问内网设备？ ipv6网络远程访问内网所有设备。以下教程只针对桥接拨号，openwrt主路由，个人编译的immortalwrt固件。其他网络情况请按需配置。以下openwrt插件均已编译在固件里面了。\nGitHub去点一颗小星星simWRT\n网络环境介绍 []\n主路由网口设置 []\n解析方案 我使用的是DDNS-Go+socat方案，首先需要在DDNS-Go上解析域名，在Cloudflare上购买一个域名，创建一个针对dns解析的api令牌，创建令牌 -\u003e 编辑区域 DNS (使用模板)创建好令牌填写在DDNS-Go上面。\n[]\n确保wan口已经获取到ipv6,图上是错误的删了一部分，要确保能使用ipv6地址访问到openwrt。\n使用Socat对ipv6进行所需端口转发，前面两个必须22看个人需求，如果需要远程ssh就打开。\n[]\n使用Nginx Proxy Manager绑定内网ip并设置https。Nginx Proxy Manager在10.10.10.110并非主路由，是装在lxc容器docker里面。Nginx Proxy Manager可以添加所有需要反代的内网域名即可。\n[]\n在防火墙下的通信规则里面放行4443端口。\n如何访问 使用反代域名加4443即可访问 例如内网openwrt:https://openwrt.youname.com:4443\n预告 下一期将使用vpn建立隧道访问内网设备，可以防止ipv6解析出现问题导致无法访问的问题。"},"title":"ipv6进阶之如何实现远程访问内网设备？"},"/blog/10009/":{"data":{"":"","#":"自签应用可以体验到无广告，加入特殊功能的ios软件，缺点是周期比较短，个人用户只能签3个应用，AltStore本身一个，就剩下两个。而企业证书需要花钱购买，而申请的话比较复杂且不是很稳定。如果自用，我还是比较推荐自签，无成本且不是多难。\n自签后能实现什么功能？ 1.应用多开\n2.增加特殊功能，例如微信去朋友圈广告，防撤回等。YouTube视频下载等等，取决于ipa软件。\nwindows自签软件下载 1.下载安装最新版本的iTunes和iCloud并安装\niTunes 下载: Windows 64-bit: iTunes iCloud 下载: Windows 64-bit: iCloud\n2.下载AltStore并安装\nAltStore\n安装并签名 1.解压 AltInstaller.zip并运行setup.exe。在windows任务栏搜索找到altserver以管理员身份运行。\n2.使用数据线连接设备，解锁设备并同意信任计算机设备。\n3.打开iTunes局域网wifi与手机同步选项。\n3.在右下角的任务栏中找到altserver图标，单击选择Install AltStore。\n4.输入账号密码进行身份验证。\n5.等待几秒钟，软件将会被安装到设备。在设备的设置-\u003e通用-\u003evpn与设备管理-\u003e信任你的id\n6.ios16以上设备需要打开开发人员模式。在设置-\u003e隐私与安全-\u003e开发人员模式。启用开发者模式，设备会要求重启，重启完成后即可安装并签名ipa软件了。\n过期重签 个人证书7天会过期，所以快到期前需要重签。重签还是打开三个软件，在打开iTunes同步功能的情况下，可以直接手机一键重签。如果重签失败可以使用设备连接电脑点击软件后面的天数即可。\nipa破解软件推荐 破解软件 IOS Mac频道 🅥 iOS破解软件分享"},"title":"使用windows将AltStore安装到ios——自签ipa应用"},"/blog/10010/":{"data":{"":"","#":"家里的网络虽然有ipv6，但是站点比较多，总不能记下每个ipv6地址，还有部分环境配置动态域名比较繁琐。所以根据 YouTube Vedio Talk大佬的指南，对家庭ipv6的反向代理实现只有ipv6的情况下使用地址+端口号访问。\n说明 1.已经开启了ipv6并且测试ipv6地址能正常访问openwrt。\n2.需要自备一个域名。\n2.Nginx Proxy Manager反向代理理论与端口转发Socat不能在同一个地址。 例如：我的端口转发Socat在主路由openwrt。(10.10.10.1)。Nginx Proxy Manager反向代理在pve的lxc容器下建的docker(10.10.10.2)\n3.这个方法适用多个一个虚拟机多个环境，如果只是有一个docker那么可以直接安装Lucky大吉解析一个ip+端口理论也是行的。\n环境部署 1.在主路由openwrt iStore 安装 Socat端口转发\n2.在主路由openwrt iStore 安装 Lucky大吉 动态域名解析与同步\n3.docker安装portainer，我使用的汉化版。安装成功后docker地址+9000就可以访问到portainer。\ndocker run -d --restart=always --name=\"portainer\" -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock 6053537/portainer-ce 4.安装Nginx Proxy Manager反向代理，在portainer里面创建堆栈内容如下。\nversion: '3.8' services: app: image: 'jc21/nginx-proxy-manager:latest' restart: unless-stopped ports: # These ports are in format \u003chost-port\u003e:\u003ccontainer-port\u003e - '8080:80' # Public HTTP Port 需要更改的位置 - '4443:443' # Public HTTPS Port 需要更改的位置 - '81:81' # Admin Web Port # Add any other Stream port you want to expose # - '21:21' # FTP environment: # Mysql/Maria connection parameters: DB_MYSQL_HOST: \"db\" DB_MYSQL_PORT: 3306 DB_MYSQL_USER: \"npm\" DB_MYSQL_PASSWORD: \"npm\" DB_MYSQL_NAME: \"npm\" # Uncomment this if IPv6 is not enabled on your host # DISABLE_IPV6: 'true' volumes: - ./data:/data - ./letsencrypt:/etc/letsencrypt depends_on: - db db: image: 'jc21/mariadb-aria:latest' restart: unless-stopped environment: MYSQL_ROOT_PASSWORD: 'npm' MYSQL_DATABASE: 'npm' MYSQL_USER: 'npm' MYSQL_PASSWORD: 'npm' MARIADB_AUTO_UPGRADE: '1' volumes: - ./mysql:/var/lib/mysql 创建好后部署,成功后lxc容器+81即可访问Nginx Proxy Manager。\n默认账户密码：\nEmail: admin@example.com Password: changeme portainer、Nginx Proxy Manager及数据库\n端口转发 在openwrt主路Socat设置端口转发，添加两个端口443转到4443和80转到8080\n端口转发设置\n端口转发设置\n动态域名解析 需要解析的ipv6地址\n域名解析类型AAAA\nLucky大吉 设置 解析的域名要填写泛域名\nNginx Proxy Manager配置ssl证书 证书有两种配置方式：一种是提前申请号上传，另外一种是使用Nginx Proxy Manager代申请\n需要提前到cloudflare里面创建dns解析的api\n域名添加 需要提前到cloudflare里面创建dns解析的api\n添加域名\n接下来就可以使用解析成功的域名加上端口号4443访问内网地址了。建议配置一个导航 这样会更方便。\n注意事项 1.pve虚拟机的内网地址需要填写：https\n2.如果有使用Home Assistant需要打开内网地址下面的第三个选项Websockets Support，不然是没办法访问的。"},"title":"家庭网络ipv6使用指南：Nginx Proxy Manager反向代理及证书配置"},"/blog/markdown/":{"data":{"":"","#":"","平台申请#平台申请":" 虚拟信用卡的优势 虚拟信用卡号让您在进行在线购物时，无需透露真实的信用卡账户信息，从而有效保护您免受欺诈风险。此外，这类信用卡还具有灵活性，可以轻松取消和更换，让您更自由地决定商家何时向您收取费用以及具体金额。\n2024 年最佳虚拟信用卡评选\n我们根据功能、奖励计划和费用等方面，对 2024 年最优秀的虚拟信用卡进行了分析。以下是我们的发现：\nGBP 实体卡\n特点：新增支持 GBP 的实体卡，允许充值 USDT 进行消费和 ATM 取现。 优势：费用极低，可能是目前同类卡片中消耗最小的选择之一。 申请注意：由于实体卡申请过于火爆，新用户可能需要排队。建议提前注册占位，否则实体卡注册可能随时关闭。 最佳虚拟信用卡 一：DuPay 虚拟信用卡\n充值购买虚拟卡需要使用虚拟货币，建议先注册加密货币交易所：\n注册币安 DuPay 虚拟信用卡\nDuPay 是全球首款专为华人市场打造的虚拟信用卡，具有以下特点：\n版本选择：提供 KYC（实名验证）版和非 KYC 版，满足匿名需求。 支付支持：支持 USDT 直接充值，费率适中。完成 KYC 验证后，可免月费，手续费几乎可以忽略不计。 额度与管理：每月额度高达 20000 美元。充值和消费明细可在应用内实时查看，让您随时掌握财务动态。 USDT 转美元：支持在 APP 内将 USDT 直接兑换为美元，非常适合从事加密货币交易的用户。 注册方式：支持手机号码或邮箱注册，贴合国际用户的实际需求。 DuPay 不仅保护隐私，费用合理，还提供了强大的财务管理功能，是一款非常值得推荐的虚拟信用卡。\n优点 新手福利\n注册即送新手奖励。 成功注册后免费获得 Master 和 Visa 标准卡。 多平台消费\n支持绑定支付宝、微信和 PayPal，用于全球消费支付。 绑定后可通过 USDT 直接支付，避免 OTC 交易风险。 Dupay 全新订阅卡\nDupay 最近推出了一款专为订阅服务设计的新型虚拟卡，非常适合各类国际订阅场景。建议尽早申请使用，因为这类虚拟卡可能随时停止发行。\n详细信息 - 开卡费：5 USDT - 月费：1 USD - 卡片资金上限：500 USD - 卡片有效期：2年 - 卡片类型：Visa 预付卡 支持场景 支持以下国际订阅服务： Twitter ChatGPT OPENAI App Store（美区） Google Play（美区） 不支持国内支付：如支付宝、微信、美团等。 注意事项 卡片的资金上限为 500 USD。当余额低于 500 USD 时，用户可通过充值继续使用。 Dupay 的订阅卡设计贴合国际用户需求，支持广泛场景，费用低廉，是高频订阅服务用户的理想选择。\n​\n最佳虚拟信用卡二 ：PokePay 前言\n如果您对虚拟货币有所了解，应该对 USDT（泰达币）并不陌生。作为一种与美元 1:1 挂钩的稳定币，USDT 被广泛应用于全球数字支付场景，也是当前市面上最主流的稳定币之一。\n近年来，随着 Web 3.0 的普及，支持 USDT 的虚拟信用卡和实体银行卡数量不断增加，让基于 USDT 的消费和取现变得更加简单与便捷。\n以下是支持 USDT 开卡的优质平台推荐，通过这些平台，您可以快速开设虚拟信用卡或实体卡，享受高效便捷的支付服务。\n支持 USDT 开卡平台推荐\nPokePay注册 PokePay 是一家资质安全合规的全球多币种支付平台，持有北美/加拿大 MSB 拍照和香港 MSO 资质，支持线上线下全覆盖的支付场景。\n官网：\n官网直达（含优惠码）\n使用上方链接注册新用户，可获取一张价值 20 USDT - 12.8 USDT 的优惠券。\nPokePay 虚拟信用卡\nPokePay 提供多种虚拟信用卡类型，包括星际卡和尊享卡，均支持充值以下主流加密货币：\nUSDT USDC BTC ETH 支持的支付场景：\n解锁 ChatGPT、OpenAI 等 AI 会员服务 支付 Netflix、Switch 等游戏影音服务 投放 Google、Facebook、Twitter 广告 支持亚马逊、eBay、Wish、Shopee 等跨境支付 部分卡片支持绑定支付宝、PayPal 等平台 卡片类型与权益 星际卡\n类型：MasterCard 特点：免月费、低提现手续费 支持场景：全球线上线下支付 卡片编号与详细权益：\n星际卡 559666：详细权益介绍 星际卡 404038：详细权益介绍 尊享卡\n类型：Visa 特点：全球通用，支持多币种充值 支持场景：全球线上线下支付 卡片编号与详细权益：\n尊享卡 556150：详细权益介绍 尊享卡 441112：详细权益介绍 使用规范及注意事项 风控提醒： 退款率、撤销率、失败率、验证率过高可能导致卡片被冻结。 禁止行为： 禁止在 Steam、Blizzard、EA、战网等游戏平台消费。 禁止绑定订阅平台自动扣费。 建议：取消自动订阅功能，以防余额不足导致扣款失败，从而触发风控机制。\nPokePay 实体卡 PokePay 提供基于港币的 Visa 实体卡，支持以下功能：\n海内外线下支付 ATM 取现 Pos 机刷卡消费 这张实体卡适合需要进行大额消费或现金取现的用户。\n通过 PokePay，无论是虚拟卡还是实体卡，您都能享受安全、高效的支付体验，同时充分利用 USDT 的便捷性。\n最佳虚拟信用卡三 ：FotonCard 平台申请 福田卡FotonCard虚拟信用卡\n跨境电商行业专用虚拟信用卡平台\nFotonCard虚拟信用卡平台，适用于跨境电商、广告投放、付费订阅等业务场景，自助注册充值开卡。\n您可以通过此平台创建自己的香港/新加坡/英国和美国虚拟信用卡。\n美国VISA：428837/485932/404038/441112\n美国Master:540524/556766/559666/556150/531993/524897/559292/556371/553370/553437/556167\n香港VISA：418122/472593OR436797\n香港Master：529587/538738/526144417969/222929/222934/557271\n新加坡VISA：450306\n英国Master：256000\n注意！FotonCard禁止支付或綁定以下商戶：Telegram / Apple / Twitte / YouTube / LiveChat / WIX / Uber / Alipay / WeChat / FoodPanda / Grab**\n开卡费＄2 增值费率2.5%**\n充值方式：usdt 充值转账处理费：1usdt\n仅需邮箱即可开户，无需认证（KYC）\n2023年7月5号后注册的用户须支付保证金后（可退回）才能创建卡，建议新用户至少充值$150，以确保能缴纳保证金及支付创建卡手续费。\n查看详情 \u003e\n邀请码：548569\n支持的业务场景:\n1，跨境电商平台:亚马逊、Wish、eBay、速卖通、敦煌网、沃尔玛、煤炉、Etsy、Shopify Depop、Vinted、Shopee、Lazada、新蛋、独立站等\n2，广告营销投放:Google Ads、Facebook Ads、Twitter Ads.Quora Ads、Pinterest Ads、Linedin Ads等\n3，开发者账号:谷歌开发者账号、苹果开发者账号\n4，各种物流运费支付、商旅酒店机票预定支付、留学教育缴费、跨境电商相关工具付费订阅等\n我可以创建多少张虚拟卡？\n新用户只能创建3张虚拟卡，然后您可以联系客服申请创建更多卡，并且您最多可以创建无限数量的虚拟卡。\n如何注册福田卡FotonCard账户以及如何使用？\n首先，免费注册一个帐户，注册链接：点击查看详情\n邀请码：548569（这是必需的）\n需要在电脑浏览器中打开！如果在手机上打开它，页面不会完全显示。\n转入资金。资金可以通过USDT进行添加。\n创建您需要的虚拟卡。福田卡将收取部分发卡和手续费。\n创建卡后，您可以获取卡号，有效期，安全码和其他信息。\n在哪里使用虚拟信用卡？\n例如，您可以在线购物，为Facebook广告付费，为Google广告付费以及其他用途！\nFotonCard平台具有严格的f-风险控制和反洗钱机制，仅限于广告费支付、电子商务、付费订阅等合法用途。","最佳虚拟信用卡三-fotoncard#\u003cstrong\u003e最佳虚拟信用卡\u003c/strong\u003e三 ：FotonCard":""},"title":"最佳虚拟信用卡评测"},"/blog/test-deployment/":{"data":{"":"","-测试时间#📝 测试时间":"创建时间：{{ .Date }}\n如果这篇文章出现在你的网站上，说明自动化部署配置成功！","-测试步骤#✅ 测试步骤":" 创建这篇文章 提交到Git 推送到GitHub 观察GitHub Actions是否自动触发 检查网站是否自动更新 ","-测试目的#🎯 测试目的":"这是一篇测试文章，用来验证Hugo网站的自动化部署是否正常工作。","-预期结果#🚀 预期结果":"如果一切正常：\nGitHub Actions会自动构建Hugo站点 将构建好的文件推送到公有库 网站会自动更新显示这篇文章 "},"title":"测试自动化部署"},"/guarantee/":{"data":{"":"","#":" 担保交易服务 第一段描述第二段描述 咨询我们 模块标题 模块内容。\n模块标题 模块内容。\n模块标题 模块内容。\n这里是md的编辑器示例： 在我们现在使用的网络中，远程访问家里的设备和公司内网已经成了常见需求，主流的方案有ipv4/ipv6方案，vpn隧道，vps中转等。Tailscale的组网方式相对简单，且不依赖公网。 对比 **IPv4/IPv6 公网：**IPv4 相对 IPv6 而言要简单得多，只需要配置动态 DDNS 解析和端口转发与放行即可。而 IPv6 则相对复杂许多，一般需要使用运营商的高级管理员账户自行开启 IPv6 功能，然后在光猫和主路由上进行相应的配置，才能获取到 IPv6 公网地址。接下来，还需要进行动态 DDNS 解析和端口转发与放行。\n随着运营商逐步封锁高级管理员账户的权限，获取 IPv6 公网 IP 变得越来越复杂。\n**Tailscale：**Tailscale 几乎不需要任何配置。只要安装客户端并登录账户，设备之间便能自动组网，无需担心 NAT 穿透、端口转发等问题。\n**双层保障：**从安全性上讲，Tailscale 更加安全且简单，但在网速方面，公网 IP 通常要优于 Tailscale。\n对我来说，小白才会做选择，而我选择全都要，哈哈！这种双重保障方式能够确保在某些场景下提供额外的可靠性。比如，当你不在家里时，可能需要对软路由进行升级或更新动态解析插件。如果此时 IPv6 解析出现问题，导致无法访问内网设备，Tailscale 就可以帮你顺利连接到内网，解决问题。\n安装与配置 在主路由上安装Tailscale，如果使用的是我编译的插件是自带Tailscale。由于我编译的很精简并不适用所有人，只以x86架构的机器上测试为准。提前注册好Tailscale账号，ssh连接到主路由执行下面命令。\nopkg update wget -O /tmp/luci-app-tailscale_1.1.3_all.ipk https://github.com/asvow/luci-app-tailscale/releases/download/v1.1.3/luci-app-tailscale_1.1.3_all.ipk wget -O /tmp/luci-i18n-tailscale-zh-cn_240923.10793_all.ipk https://github.com/asvow/luci-app-tailscale/releases/download/v1.1.3/luci-i18n-tailscale-zh-cn_240923.10793_all.ipk opkg install /tmp/luci-*-tailscale*.ipk "},"title":"担保交易"},"/market/":{"data":{"":"","#":" 商业营销顾问服务 第一段描述第二段描述 咨询我们 模块标题 模块内容。\n模块标题 模块内容。\n模块标题 模块内容。\n这里是md的编辑器示例： 在我们现在使用的网络中，远程访问家里的设备和公司内网已经成了常见需求，主流的方案有ipv4/ipv6方案，vpn隧道，vps中转等。Tailscale的组网方式相对简单，且不依赖公网。 对比 **IPv4/IPv6 公网：**IPv4 相对 IPv6 而言要简单得多，只需要配置动态 DDNS 解析和端口转发与放行即可。而 IPv6 则相对复杂许多，一般需要使用运营商的高级管理员账户自行开启 IPv6 功能，然后在光猫和主路由上进行相应的配置，才能获取到 IPv6 公网地址。接下来，还需要进行动态 DDNS 解析和端口转发与放行。\n随着运营商逐步封锁高级管理员账户的权限，获取 IPv6 公网 IP 变得越来越复杂。\n**Tailscale：**Tailscale 几乎不需要任何配置。只要安装客户端并登录账户，设备之间便能自动组网，无需担心 NAT 穿透、端口转发等问题。\n**双层保障：**从安全性上讲，Tailscale 更加安全且简单，但在网速方面，公网 IP 通常要优于 Tailscale。\n对我来说，小白才会做选择，而我选择全都要，哈哈！这种双重保障方式能够确保在某些场景下提供额外的可靠性。比如，当你不在家里时，可能需要对软路由进行升级或更新动态解析插件。如果此时 IPv6 解析出现问题，导致无法访问内网设备，Tailscale 就可以帮你顺利连接到内网，解决问题。\n安装与配置 在主路由上安装Tailscale，如果使用的是我编译的插件是自带Tailscale。由于我编译的很精简并不适用所有人，只以x86架构的机器上测试为准。提前注册好Tailscale账号，ssh连接到主路由执行下面命令。\nopkg update wget -O /tmp/luci-app-tailscale_1.1.3_all.ipk https://github.com/asvow/luci-app-tailscale/releases/download/v1.1.3/luci-app-tailscale_1.1.3_all.ipk wget -O /tmp/luci-i18n-tailscale-zh-cn_240923.10793_all.ipk https://github.com/asvow/luci-app-tailscale/releases/download/v1.1.3/luci-i18n-tailscale-zh-cn_240923.10793_all.ipk opkg install /tmp/luci-*-tailscale*.ipk "},"title":"商业营销顾问服务"},"/payment/":{"data":{"":"","#":" 代付服务 第一段描述第二段描述 咨询我们 模块标题 模块内容。\n模块标题 模块内容。\n模块标题 模块内容。\n这里是md的编辑器示例： 在我们现在使用的网络中，远程访问家里的设备和公司内网已经成了常见需求，主流的方案有ipv4/ipv6方案，vpn隧道，vps中转等。Tailscale的组网方式相对简单，且不依赖公网。 对比 **IPv4/IPv6 公网：**IPv4 相对 IPv6 而言要简单得多，只需要配置动态 DDNS 解析和端口转发与放行即可。而 IPv6 则相对复杂许多，一般需要使用运营商的高级管理员账户自行开启 IPv6 功能，然后在光猫和主路由上进行相应的配置，才能获取到 IPv6 公网地址。接下来，还需要进行动态 DDNS 解析和端口转发与放行。\n随着运营商逐步封锁高级管理员账户的权限，获取 IPv6 公网 IP 变得越来越复杂。\n**Tailscale：**Tailscale 几乎不需要任何配置。只要安装客户端并登录账户，设备之间便能自动组网，无需担心 NAT 穿透、端口转发等问题。\n**双层保障：**从安全性上讲，Tailscale 更加安全且简单，但在网速方面，公网 IP 通常要优于 Tailscale。\n对我来说，小白才会做选择，而我选择全都要，哈哈！这种双重保障方式能够确保在某些场景下提供额外的可靠性。比如，当你不在家里时，可能需要对软路由进行升级或更新动态解析插件。如果此时 IPv6 解析出现问题，导致无法访问内网设备，Tailscale 就可以帮你顺利连接到内网，解决问题。\n安装与配置 在主路由上安装Tailscale，如果使用的是我编译的插件是自带Tailscale。由于我编译的很精简并不适用所有人，只以x86架构的机器上测试为准。提前注册好Tailscale账号，ssh连接到主路由执行下面命令。\nopkg update wget -O /tmp/luci-app-tailscale_1.1.3_all.ipk https://github.com/asvow/luci-app-tailscale/releases/download/v1.1.3/luci-app-tailscale_1.1.3_all.ipk wget -O /tmp/luci-i18n-tailscale-zh-cn_240923.10793_all.ipk https://github.com/asvow/luci-app-tailscale/releases/download/v1.1.3/luci-i18n-tailscale-zh-cn_240923.10793_all.ipk opkg install /tmp/luci-*-tailscale*.ipk "},"title":"代付服务"},"/security/":{"data":{"":" 网络安全顾问服务 根据您的业务需要，千度可以提供单项安全顾问服务，也可以提供网络安全顾问整包服务。 咨询我们 渗透测试 专业的安全团队，10多年的实战渗透经验，亲自帮你诊断系统的脆弱点。完全模拟黑客的行为，对客户网站进行深度渗透测试，发现并给出修复意见形成专业报告，帮助客户真正解决安全问题。\n溯源追踪 根据客户提供的线索，对已经或者正在发生的针对客户网络和IT系统的恶意网络行为（不实报道、恶意中伤、信息泄密、黑客攻击等）进行溯源追踪。\n应急响应 依靠千度多年的安全攻防实战技术能力和管理经验，参照国际信息安全事件响应处理相关标准，帮助用户在发生安全事件后，按照预防、情报信息收集、遏制、根除、恢复流程，提供专业的7*24远程紧急响应处理服务。\n安全顾问 我们做您的安全顾问，为你们解答安全问题，评估安全风险，做出安全决策。协助建立内部安全规范，员工安全意识培训，技术人员专项安全培训。\n安全建设 怕被黑、怕拖库、怕被劫持就是安全建设的最直接的驱动力。千度帮助你从零开始逐步搭建安全体系，有效减低安全事件发生，有效保障基础安全和业务安全。\n安全战略制定 分析业务目标、组织结构和技术环境，制定切实可行的网络安全战略。提供明确的发展蓝图，确保组织的网络安全持续改进。\n企业安全架构设计 根据政企的安全战略和业务需求，设计全面的企业安全架构，包括安全业务架构、安全技术架构和安全应用架构等各个方面，确保需求得到满足。\n安全工程规划 在企业安全架构的基础上，规划具体的安全工程项目，实现政企客户的网络安全目标。并确定项目优先级、分配资源、制定实施计划。"},"title":"网络安全顾问"},"/service/":{"data":{"":" 与千度合作发现无限可能 千度最重注的是客户的隐私安全，我们承诺永远不会泄露客户信息旨在为您提供量身定制的解决方案，从网站开发、网络安全、商业营销、区块链、代付和担保交易等多个领域，满足您独特的需求 web3区块链服务 QianDu针对區塊鏈、NFT、元宇宙、加密貨幣、去中心化交易所/钱包等产业链提供咨询、开发等服务\n网络安全顾问 千度有十分专业的安全团队，根据您的业务需要，可以提供单项安全顾问服务，也可以提供网络安全顾问整包服务。\n网络与应用程序 QianDu提供专业的网络与应用程序定制服务，您只需要提供需求文档和您的预算，我们将在24小时内评估工期和可执行性。\n担保交易 千度是一家有底线的担保，无论您是服务方还是客户方，我们专业人员都会随时帮助满足您的担保隐私，我方只提供担保服务。\n商业营销顾问 QianDu为您提供关于Google、FaceBook、X、Instagram、TikTok、Youtube等全平台营销解决方案\n成品软件交易 QianDu依赖来源于上百名开发者的闭源和商业客户交付产品，您所需要的所有商业软件几乎我们都可以提供交易\n24小时为您提供服务 不管您遇到什么问题，都可以在QianDu都可以帮您解决。\n联系我们 "},"title":"服务"},"/softwaretrade/":{"data":{"":"","#":" 成品软件交易服务 第一段描述第二段描述 咨询我们 模块标题 模块内容。\n模块标题 模块内容。\n模块标题 模块内容。\n这里是md的编辑器示例： 在我们现在使用的网络中，远程访问家里的设备和公司内网已经成了常见需求，主流的方案有ipv4/ipv6方案，vpn隧道，vps中转等。Tailscale的组网方式相对简单，且不依赖公网。 对比 **IPv4/IPv6 公网：**IPv4 相对 IPv6 而言要简单得多，只需要配置动态 DDNS 解析和端口转发与放行即可。而 IPv6 则相对复杂许多，一般需要使用运营商的高级管理员账户自行开启 IPv6 功能，然后在光猫和主路由上进行相应的配置，才能获取到 IPv6 公网地址。接下来，还需要进行动态 DDNS 解析和端口转发与放行。\n随着运营商逐步封锁高级管理员账户的权限，获取 IPv6 公网 IP 变得越来越复杂。\n**Tailscale：**Tailscale 几乎不需要任何配置。只要安装客户端并登录账户，设备之间便能自动组网，无需担心 NAT 穿透、端口转发等问题。\n**双层保障：**从安全性上讲，Tailscale 更加安全且简单，但在网速方面，公网 IP 通常要优于 Tailscale。\n对我来说，小白才会做选择，而我选择全都要，哈哈！这种双重保障方式能够确保在某些场景下提供额外的可靠性。比如，当你不在家里时，可能需要对软路由进行升级或更新动态解析插件。如果此时 IPv6 解析出现问题，导致无法访问内网设备，Tailscale 就可以帮你顺利连接到内网，解决问题。\n安装与配置 在主路由上安装Tailscale，如果使用的是我编译的插件是自带Tailscale。由于我编译的很精简并不适用所有人，只以x86架构的机器上测试为准。提前注册好Tailscale账号，ssh连接到主路由执行下面命令。\nopkg update wget -O /tmp/luci-app-tailscale_1.1.3_all.ipk https://github.com/asvow/luci-app-tailscale/releases/download/v1.1.3/luci-app-tailscale_1.1.3_all.ipk wget -O /tmp/luci-i18n-tailscale-zh-cn_240923.10793_all.ipk https://github.com/asvow/luci-app-tailscale/releases/download/v1.1.3/luci-i18n-tailscale-zh-cn_240923.10793_all.ipk opkg install /tmp/luci-*-tailscale*.ipk "},"title":"成品软件交易服务"},"/web3/":{"data":{"":"","#":" 探索Web3区块链的无限可能 部署web3区块链业务引领未来数字经济新潮流 咨询我们 代币发行 提供代币发行、代币官网开发、去中心化虚拟货币交易所开发、虚拟货币钱包开发、代币上架等全程陪跑服务。\nNTF 提供NTF发行、NTF官网开发、NTF交易所凭条、NTF钱包管理、NTF上架等全程陪跑服务。。\n元宇宙 元宇宙、VR、AR/MR等领域项目开发。\nWeb3 区块链技术正在重塑世界。我们的工作室致力于为您提供全方位的专业服务，涵盖区块链、NFT、元宇宙、加密货币、去中心化交易所 / 钱包等产业链。 服务 我们拥有经验丰富的专家团队，深入研究和实践这些前沿领域。无论是您需要关于区块链技术的咨询，还是期望开发创新的 NFT 项目，亦或是打造沉浸式的元宇宙体验，甚至是构建安全可靠的去中心化交易所和钱包，我们都能为您提供精准、高效、专业的解决方案。\n合作流程 需求沟通：您与我们的团队进行初步接触，详细阐述您在区块链、NFT、元宇宙、去中心化交易所 / 钱包等方面的需求和期望。\n方案定制：我们根据您的需求，进行深入的市场调研和技术分析，为您量身定制专属的解决方案。\n协议签订：双方对方案达成一致后，签订具有约束双方合作内容的的合作协议，明确双方的权利和义务。\n支付启动金：向QianDu支付一笔不低于项目总金额50%的启动资金。\n项目启动：组建专业的项目团队，制定详细的项目计划和时间表，正式启动项目。\n定期沟通：在项目进行过程中，我们保持定期沟通，及时向您汇报项目进展，倾听您的意见和建议。\n成果交付：按照合同约定的时间和标准，向您交付项目成果，并提供相关的技术支持和培训。\n支付尾款：支付项目合作剩余款项\n售后服务：项目交付后，我们提供持续的售后服务，确保项目的稳定运行和优化升级。"},"title":"web3区块链服务"},"/website/":{"data":{"":"","#":" 网络与应用程序服务 第一段描述第二段描述 咨询我们 模块标题 模块内容。\n模块标题 模块内容。\n模块标题 模块内容。\n这里是md的编辑器示例： 在我们现在使用的网络中，远程访问家里的设备和公司内网已经成了常见需求，主流的方案有ipv4/ipv6方案，vpn隧道，vps中转等。Tailscale的组网方式相对简单，且不依赖公网。 对比 **IPv4/IPv6 公网：**IPv4 相对 IPv6 而言要简单得多，只需要配置动态 DDNS 解析和端口转发与放行即可。而 IPv6 则相对复杂许多，一般需要使用运营商的高级管理员账户自行开启 IPv6 功能，然后在光猫和主路由上进行相应的配置，才能获取到 IPv6 公网地址。接下来，还需要进行动态 DDNS 解析和端口转发与放行。\n随着运营商逐步封锁高级管理员账户的权限，获取 IPv6 公网 IP 变得越来越复杂。\n**Tailscale：**Tailscale 几乎不需要任何配置。只要安装客户端并登录账户，设备之间便能自动组网，无需担心 NAT 穿透、端口转发等问题。\n**双层保障：**从安全性上讲，Tailscale 更加安全且简单，但在网速方面，公网 IP 通常要优于 Tailscale。\n对我来说，小白才会做选择，而我选择全都要，哈哈！这种双重保障方式能够确保在某些场景下提供额外的可靠性。比如，当你不在家里时，可能需要对软路由进行升级或更新动态解析插件。如果此时 IPv6 解析出现问题，导致无法访问内网设备，Tailscale 就可以帮你顺利连接到内网，解决问题。\n安装与配置 在主路由上安装Tailscale，如果使用的是我编译的插件是自带Tailscale。由于我编译的很精简并不适用所有人，只以x86架构的机器上测试为准。提前注册好Tailscale账号，ssh连接到主路由执行下面命令。\nopkg update wget -O /tmp/luci-app-tailscale_1.1.3_all.ipk https://github.com/asvow/luci-app-tailscale/releases/download/v1.1.3/luci-app-tailscale_1.1.3_all.ipk wget -O /tmp/luci-i18n-tailscale-zh-cn_240923.10793_all.ipk https://github.com/asvow/luci-app-tailscale/releases/download/v1.1.3/luci-i18n-tailscale-zh-cn_240923.10793_all.ipk opkg install /tmp/luci-*-tailscale*.ipk "},"title":"网络与应用程序"}}